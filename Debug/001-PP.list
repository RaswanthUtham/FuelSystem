
001-PP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d9c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000f60  08000f68  00001f68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000f60  08000f60  00001f68  2**0
                  CONTENTS
  4 .ARM          00000000  08000f60  08000f60  00001f68  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000f60  08000f68  00001f68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000f60  08000f60  00001f60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000f64  08000f64  00001f64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001f68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000e8  20000000  08000f68  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000e8  08000f68  000020e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001491  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005bd  00000000  00000000  00003429  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  000039e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000fc  00000000  00000000  00003b58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001918  00000000  00000000  00003c54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000218e  00000000  00000000  0000556c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000078a5  00000000  00000000  000076fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000ef9f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000003f8  00000000  00000000  0000efe4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  0000f3dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000f48 	.word	0x08000f48

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000f48 	.word	0x08000f48

08000204 <led_port_init>:

static Port_ConfigType LedPortConfig;
static Port_ConfigType PushButtonPortConfig;

void led_port_init(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
    LedPortConfig.Port = LED_PORT;
 8000208:	4b09      	ldr	r3, [pc, #36]	@ (8000230 <led_port_init+0x2c>)
 800020a:	4a0a      	ldr	r2, [pc, #40]	@ (8000234 <led_port_init+0x30>)
 800020c:	601a      	str	r2, [r3, #0]
    LedPortConfig.Pin = LED_PIN;
 800020e:	4b08      	ldr	r3, [pc, #32]	@ (8000230 <led_port_init+0x2c>)
 8000210:	2220      	movs	r2, #32
 8000212:	809a      	strh	r2, [r3, #4]
    LedPortConfig.Mode = PORT_PIN_MODE_OUTPUT_PP;
 8000214:	4b06      	ldr	r3, [pc, #24]	@ (8000230 <led_port_init+0x2c>)
 8000216:	2201      	movs	r2, #1
 8000218:	609a      	str	r2, [r3, #8]
    LedPortConfig.Speed = PORT_PIN_SPEED_FREQ_HIGH;
 800021a:	4b05      	ldr	r3, [pc, #20]	@ (8000230 <led_port_init+0x2c>)
 800021c:	2202      	movs	r2, #2
 800021e:	611a      	str	r2, [r3, #16]
    LedPortConfig.Pull = PORT_PIN_NOPULL;
 8000220:	4b03      	ldr	r3, [pc, #12]	@ (8000230 <led_port_init+0x2c>)
 8000222:	2200      	movs	r2, #0
 8000224:	60da      	str	r2, [r3, #12]
    Port_Init(&LedPortConfig);
 8000226:	4802      	ldr	r0, [pc, #8]	@ (8000230 <led_port_init+0x2c>)
 8000228:	f000 fa36 	bl	8000698 <Port_Init>
}
 800022c:	bf00      	nop
 800022e:	bd80      	pop	{r7, pc}
 8000230:	2000001c 	.word	0x2000001c
 8000234:	40020000 	.word	0x40020000

08000238 <push_button_port_init>:
{
  Port_TogglePin(LedPortConfig.Port, LED_PIN);
}

void push_button_port_init(void)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	af00      	add	r7, sp, #0
    PushButtonPortConfig.Port = PUSH_BUTTON_PORT;
 800023c:	4b0a      	ldr	r3, [pc, #40]	@ (8000268 <push_button_port_init+0x30>)
 800023e:	4a0b      	ldr	r2, [pc, #44]	@ (800026c <push_button_port_init+0x34>)
 8000240:	601a      	str	r2, [r3, #0]
    PushButtonPortConfig.Pin = PUSH_BUTTON_PIN;
 8000242:	4b09      	ldr	r3, [pc, #36]	@ (8000268 <push_button_port_init+0x30>)
 8000244:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8000248:	809a      	strh	r2, [r3, #4]
    PushButtonPortConfig.Mode = PORT_PIN_MODE_IT_FALLING;
 800024a:	4b07      	ldr	r3, [pc, #28]	@ (8000268 <push_button_port_init+0x30>)
 800024c:	f44f 1204 	mov.w	r2, #2162688	@ 0x210000
 8000250:	609a      	str	r2, [r3, #8]
    PushButtonPortConfig.Speed = PORT_PIN_SPEED_FREQ_HIGH;
 8000252:	4b05      	ldr	r3, [pc, #20]	@ (8000268 <push_button_port_init+0x30>)
 8000254:	2202      	movs	r2, #2
 8000256:	611a      	str	r2, [r3, #16]
    PushButtonPortConfig.Pull = PORT_PIN_PULLUP;
 8000258:	4b03      	ldr	r3, [pc, #12]	@ (8000268 <push_button_port_init+0x30>)
 800025a:	2201      	movs	r2, #1
 800025c:	60da      	str	r2, [r3, #12]
    Port_Init(&PushButtonPortConfig);
 800025e:	4802      	ldr	r0, [pc, #8]	@ (8000268 <push_button_port_init+0x30>)
 8000260:	f000 fa1a 	bl	8000698 <Port_Init>
}
 8000264:	bf00      	nop
 8000266:	bd80      	pop	{r7, pc}
 8000268:	20000034 	.word	0x20000034
 800026c:	40020800 	.word	0x40020800

08000270 <NVIC_EnableIRQ>:
#include "stm32xxxx.h"

void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	4603      	mov	r3, r0
 8000278:	71fb      	strb	r3, [r7, #7]
    *(CM4_NVIC_ISER_BASE_ADDR + (IRQn >> 5UL)) |= 1 << (IRQn & 0x1F);
 800027a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800027e:	115b      	asrs	r3, r3, #5
 8000280:	b25b      	sxtb	r3, r3
 8000282:	009b      	lsls	r3, r3, #2
 8000284:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000288:	f503 4361 	add.w	r3, r3, #57600	@ 0xe100
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	79fb      	ldrb	r3, [r7, #7]
 8000290:	f003 031f 	and.w	r3, r3, #31
 8000294:	2101      	movs	r1, #1
 8000296:	fa01 f303 	lsl.w	r3, r1, r3
 800029a:	4619      	mov	r1, r3
 800029c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002a0:	115b      	asrs	r3, r3, #5
 80002a2:	b25b      	sxtb	r3, r3
 80002a4:	009b      	lsls	r3, r3, #2
 80002a6:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 80002aa:	f503 4361 	add.w	r3, r3, #57600	@ 0xe100
 80002ae:	430a      	orrs	r2, r1
 80002b0:	601a      	str	r2, [r3, #0]
}
 80002b2:	bf00      	nop
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <main>:
uint8_t DET_ErrorCode[50]; /* ErrCode */
uint8_t DET_ServiceId[50]; /* Sid */
uint8_t DET_ModuleId[50]; /* Mid */

int main(void)
{
 80002be:	b580      	push	{r7, lr}
 80002c0:	af00      	add	r7, sp, #0
  /* Led Setup */
  nvic_irq_init();
 80002c2:	f000 f806 	bl	80002d2 <nvic_irq_init>
  led_port_init();
 80002c6:	f7ff ff9d 	bl	8000204 <led_port_init>
  push_button_port_init();
 80002ca:	f7ff ffb5 	bl	8000238 <push_button_port_init>

	while(1)
 80002ce:	bf00      	nop
 80002d0:	e7fd      	b.n	80002ce <main+0x10>

080002d2 <nvic_irq_init>:
#include "stm32f4xx_hal_spi.h"
#include "app_gpio.h"
#include "stm32f4xx_app_irq.h"

void nvic_irq_init(void)
{
 80002d2:	b580      	push	{r7, lr}
 80002d4:	af00      	add	r7, sp, #0
    NVIC_EnableIRQ(EXTI15_10_IRQn); /* GPIO PIN 10 to 15 Interrupt Enable */
 80002d6:	2028      	movs	r0, #40	@ 0x28
 80002d8:	f7ff ffca 	bl	8000270 <NVIC_EnableIRQ>
    NVIC_EnableIRQ(SPI1_IRQn); 
 80002dc:	2023      	movs	r0, #35	@ 0x23
 80002de:	f7ff ffc7 	bl	8000270 <NVIC_EnableIRQ>
}
 80002e2:	bf00      	nop
 80002e4:	bd80      	pop	{r7, pc}

080002e6 <EXTI0_IRQHandler>:
    NVIC_DisableIRQ(EXTI15_10_IRQn); /* GPIO PIN 10 to 15 Interrupt Enable */
    NVIC_DisableIRQ(SPI1_IRQn); 
}

void EXTI0_IRQHandler(void)
{
 80002e6:	b580      	push	{r7, lr}
 80002e8:	b082      	sub	sp, #8
 80002ea:	af00      	add	r7, sp, #0
    /* Debounce time for Button Press */
    for(int i=0; i<50000; i++);
 80002ec:	2300      	movs	r3, #0
 80002ee:	607b      	str	r3, [r7, #4]
 80002f0:	e002      	b.n	80002f8 <EXTI0_IRQHandler+0x12>
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	3301      	adds	r3, #1
 80002f6:	607b      	str	r3, [r7, #4]
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80002fe:	4293      	cmp	r3, r2
 8000300:	ddf7      	ble.n	80002f2 <EXTI0_IRQHandler+0xc>
    Port_EXTI0_IRQHandler(PORT_PIN_11);
 8000302:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 8000306:	f000 fd95 	bl	8000e34 <Port_EXTI0_IRQHandler>
}
 800030a:	bf00      	nop
 800030c:	3708      	adds	r7, #8
 800030e:	46bd      	mov	sp, r7
 8000310:	bd80      	pop	{r7, pc}

08000312 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void)
{
 8000312:	b580      	push	{r7, lr}
 8000314:	af00      	add	r7, sp, #0
  Port_EXTI15_10_IRQHandler(PUSH_BUTTON_PIN);
 8000316:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 800031a:	f000 fda5 	bl	8000e68 <Port_EXTI15_10_IRQHandler>
}
 800031e:	bf00      	nop
 8000320:	bd80      	pop	{r7, pc}

08000322 <SPI1_IRQHandler>:

void SPI1_IRQHandler(void)
{
 8000322:	b480      	push	{r7}
 8000324:	af00      	add	r7, sp, #0
    // Spi_SPI1_IRQHandler();
}
 8000326:	bf00      	nop
 8000328:	46bd      	mov	sp, r7
 800032a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032e:	4770      	bx	lr

08000330 <Port_EXTI15_10_IRQ_CB>:
{
    /* Interrupt Code */
}

void Port_EXTI15_10_IRQ_CB(void)
{
 8000330:	b580      	push	{r7, lr}
 8000332:	af00      	add	r7, sp, #0
    /* Interrupt Code */
    Port_TogglePin(LED_PORT, LED_PIN);
 8000334:	2120      	movs	r1, #32
 8000336:	4802      	ldr	r0, [pc, #8]	@ (8000340 <Port_EXTI15_10_IRQ_CB+0x10>)
 8000338:	f000 fcea 	bl	8000d10 <Port_TogglePin>
}
 800033c:	bf00      	nop
 800033e:	bd80      	pop	{r7, pc}
 8000340:	40020000 	.word	0x40020000

08000344 <Port_ClockControl>:
#define PORT_LENGTH 16U

uint8_t Error_Code_Index = 0;

uint8_t Port_ClockControl(PORT_TypeDef *GPIOx, uint8_t Enable)
{
 8000344:	b480      	push	{r7}
 8000346:	b08d      	sub	sp, #52	@ 0x34
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
 800034c:	460b      	mov	r3, r1
 800034e:	70fb      	strb	r3, [r7, #3]
    if (!(IS_GPIO_ALL_INSTANCE(GPIOx)))
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	4a7f      	ldr	r2, [pc, #508]	@ (8000550 <Port_ClockControl+0x20c>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d035      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a7e      	ldr	r2, [pc, #504]	@ (8000554 <Port_ClockControl+0x210>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d031      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a7d      	ldr	r2, [pc, #500]	@ (8000558 <Port_ClockControl+0x214>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d02d      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4a7c      	ldr	r2, [pc, #496]	@ (800055c <Port_ClockControl+0x218>)
 800036c:	4293      	cmp	r3, r2
 800036e:	d029      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a7b      	ldr	r2, [pc, #492]	@ (8000560 <Port_ClockControl+0x21c>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d025      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a7a      	ldr	r2, [pc, #488]	@ (8000564 <Port_ClockControl+0x220>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d021      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	4a79      	ldr	r2, [pc, #484]	@ (8000568 <Port_ClockControl+0x224>)
 8000384:	4293      	cmp	r3, r2
 8000386:	d01d      	beq.n	80003c4 <Port_ClockControl+0x80>
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a78      	ldr	r2, [pc, #480]	@ (800056c <Port_ClockControl+0x228>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d019      	beq.n	80003c4 <Port_ClockControl+0x80>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PORT;
 8000390:	4b77      	ldr	r3, [pc, #476]	@ (8000570 <Port_ClockControl+0x22c>)
 8000392:	781b      	ldrb	r3, [r3, #0]
 8000394:	461a      	mov	r2, r3
 8000396:	4b77      	ldr	r3, [pc, #476]	@ (8000574 <Port_ClockControl+0x230>)
 8000398:	2101      	movs	r1, #1
 800039a:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 800039c:	4b74      	ldr	r3, [pc, #464]	@ (8000570 <Port_ClockControl+0x22c>)
 800039e:	781b      	ldrb	r3, [r3, #0]
 80003a0:	461a      	mov	r2, r3
 80003a2:	4b75      	ldr	r3, [pc, #468]	@ (8000578 <Port_ClockControl+0x234>)
 80003a4:	217c      	movs	r1, #124	@ 0x7c
 80003a6:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_CLOCKCONTROL;
 80003a8:	4b71      	ldr	r3, [pc, #452]	@ (8000570 <Port_ClockControl+0x22c>)
 80003aa:	781b      	ldrb	r3, [r3, #0]
 80003ac:	461a      	mov	r2, r3
 80003ae:	4b73      	ldr	r3, [pc, #460]	@ (800057c <Port_ClockControl+0x238>)
 80003b0:	2106      	movs	r1, #6
 80003b2:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 80003b4:	4b6e      	ldr	r3, [pc, #440]	@ (8000570 <Port_ClockControl+0x22c>)
 80003b6:	781b      	ldrb	r3, [r3, #0]
 80003b8:	3301      	adds	r3, #1
 80003ba:	b2da      	uxtb	r2, r3
 80003bc:	4b6c      	ldr	r3, [pc, #432]	@ (8000570 <Port_ClockControl+0x22c>)
 80003be:	701a      	strb	r2, [r3, #0]
        return E_NOK;
 80003c0:	2301      	movs	r3, #1
 80003c2:	e151      	b.n	8000668 <Port_ClockControl+0x324>
    }

    uint32_t GPIO = (uint32_t)GPIOx;
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	62fb      	str	r3, [r7, #44]	@ 0x2c

    if (Enable)
 80003c8:	78fb      	ldrb	r3, [r7, #3]
 80003ca:	2b00      	cmp	r3, #0
 80003cc:	f000 80da 	beq.w	8000584 <Port_ClockControl+0x240>
    {
        switch (GPIO)
 80003d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003d2:	4a66      	ldr	r2, [pc, #408]	@ (800056c <Port_ClockControl+0x228>)
 80003d4:	4293      	cmp	r3, r2
 80003d6:	f000 80ab 	beq.w	8000530 <Port_ClockControl+0x1ec>
 80003da:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003dc:	4a63      	ldr	r2, [pc, #396]	@ (800056c <Port_ClockControl+0x228>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	f200 8141 	bhi.w	8000666 <Port_ClockControl+0x322>
 80003e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003e6:	4a60      	ldr	r2, [pc, #384]	@ (8000568 <Port_ClockControl+0x224>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	f000 8091 	beq.w	8000510 <Port_ClockControl+0x1cc>
 80003ee:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003f0:	4a5d      	ldr	r2, [pc, #372]	@ (8000568 <Port_ClockControl+0x224>)
 80003f2:	4293      	cmp	r3, r2
 80003f4:	f200 8137 	bhi.w	8000666 <Port_ClockControl+0x322>
 80003f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80003fa:	4a5a      	ldr	r2, [pc, #360]	@ (8000564 <Port_ClockControl+0x220>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d077      	beq.n	80004f0 <Port_ClockControl+0x1ac>
 8000400:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000402:	4a58      	ldr	r2, [pc, #352]	@ (8000564 <Port_ClockControl+0x220>)
 8000404:	4293      	cmp	r3, r2
 8000406:	f200 812e 	bhi.w	8000666 <Port_ClockControl+0x322>
 800040a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800040c:	4a54      	ldr	r2, [pc, #336]	@ (8000560 <Port_ClockControl+0x21c>)
 800040e:	4293      	cmp	r3, r2
 8000410:	d05e      	beq.n	80004d0 <Port_ClockControl+0x18c>
 8000412:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000414:	4a52      	ldr	r2, [pc, #328]	@ (8000560 <Port_ClockControl+0x21c>)
 8000416:	4293      	cmp	r3, r2
 8000418:	f200 8125 	bhi.w	8000666 <Port_ClockControl+0x322>
 800041c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800041e:	4a4f      	ldr	r2, [pc, #316]	@ (800055c <Port_ClockControl+0x218>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d045      	beq.n	80004b0 <Port_ClockControl+0x16c>
 8000424:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000426:	4a4d      	ldr	r2, [pc, #308]	@ (800055c <Port_ClockControl+0x218>)
 8000428:	4293      	cmp	r3, r2
 800042a:	f200 811c 	bhi.w	8000666 <Port_ClockControl+0x322>
 800042e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000430:	4a49      	ldr	r2, [pc, #292]	@ (8000558 <Port_ClockControl+0x214>)
 8000432:	4293      	cmp	r3, r2
 8000434:	d02c      	beq.n	8000490 <Port_ClockControl+0x14c>
 8000436:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000438:	4a47      	ldr	r2, [pc, #284]	@ (8000558 <Port_ClockControl+0x214>)
 800043a:	4293      	cmp	r3, r2
 800043c:	f200 8113 	bhi.w	8000666 <Port_ClockControl+0x322>
 8000440:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000442:	4a43      	ldr	r2, [pc, #268]	@ (8000550 <Port_ClockControl+0x20c>)
 8000444:	4293      	cmp	r3, r2
 8000446:	d004      	beq.n	8000452 <Port_ClockControl+0x10e>
 8000448:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800044a:	4a42      	ldr	r2, [pc, #264]	@ (8000554 <Port_ClockControl+0x210>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d00f      	beq.n	8000470 <Port_ClockControl+0x12c>
 8000450:	e109      	b.n	8000666 <Port_ClockControl+0x322>
        {
        case GPIOA_BASE:
            __RCC_GPIOA_CLK_ENABLE();
 8000452:	2300      	movs	r3, #0
 8000454:	62bb      	str	r3, [r7, #40]	@ 0x28
 8000456:	4b4a      	ldr	r3, [pc, #296]	@ (8000580 <Port_ClockControl+0x23c>)
 8000458:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800045a:	4a49      	ldr	r2, [pc, #292]	@ (8000580 <Port_ClockControl+0x23c>)
 800045c:	f043 0301 	orr.w	r3, r3, #1
 8000460:	6313      	str	r3, [r2, #48]	@ 0x30
 8000462:	4b47      	ldr	r3, [pc, #284]	@ (8000580 <Port_ClockControl+0x23c>)
 8000464:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000466:	f003 0301 	and.w	r3, r3, #1
 800046a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800046c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
            break;
 800046e:	e0fa      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOB_BASE:
            __RCC_GPIOB_CLK_ENABLE();
 8000470:	2300      	movs	r3, #0
 8000472:	627b      	str	r3, [r7, #36]	@ 0x24
 8000474:	4b42      	ldr	r3, [pc, #264]	@ (8000580 <Port_ClockControl+0x23c>)
 8000476:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000478:	4a41      	ldr	r2, [pc, #260]	@ (8000580 <Port_ClockControl+0x23c>)
 800047a:	f043 0302 	orr.w	r3, r3, #2
 800047e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000480:	4b3f      	ldr	r3, [pc, #252]	@ (8000580 <Port_ClockControl+0x23c>)
 8000482:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000484:	085b      	lsrs	r3, r3, #1
 8000486:	f003 0301 	and.w	r3, r3, #1
 800048a:	627b      	str	r3, [r7, #36]	@ 0x24
 800048c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
            break;
 800048e:	e0ea      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOC_BASE:
            __RCC_GPIOC_CLK_ENABLE();
 8000490:	2300      	movs	r3, #0
 8000492:	623b      	str	r3, [r7, #32]
 8000494:	4b3a      	ldr	r3, [pc, #232]	@ (8000580 <Port_ClockControl+0x23c>)
 8000496:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000498:	4a39      	ldr	r2, [pc, #228]	@ (8000580 <Port_ClockControl+0x23c>)
 800049a:	f043 0304 	orr.w	r3, r3, #4
 800049e:	6313      	str	r3, [r2, #48]	@ 0x30
 80004a0:	4b37      	ldr	r3, [pc, #220]	@ (8000580 <Port_ClockControl+0x23c>)
 80004a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004a4:	089b      	lsrs	r3, r3, #2
 80004a6:	f003 0301 	and.w	r3, r3, #1
 80004aa:	623b      	str	r3, [r7, #32]
 80004ac:	6a3b      	ldr	r3, [r7, #32]
            break;
 80004ae:	e0da      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOD_BASE:
            __RCC_GPIOD_CLK_ENABLE();
 80004b0:	2300      	movs	r3, #0
 80004b2:	61fb      	str	r3, [r7, #28]
 80004b4:	4b32      	ldr	r3, [pc, #200]	@ (8000580 <Port_ClockControl+0x23c>)
 80004b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004b8:	4a31      	ldr	r2, [pc, #196]	@ (8000580 <Port_ClockControl+0x23c>)
 80004ba:	f043 0308 	orr.w	r3, r3, #8
 80004be:	6313      	str	r3, [r2, #48]	@ 0x30
 80004c0:	4b2f      	ldr	r3, [pc, #188]	@ (8000580 <Port_ClockControl+0x23c>)
 80004c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004c4:	08db      	lsrs	r3, r3, #3
 80004c6:	f003 0301 	and.w	r3, r3, #1
 80004ca:	61fb      	str	r3, [r7, #28]
 80004cc:	69fb      	ldr	r3, [r7, #28]
            break;
 80004ce:	e0ca      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOE_BASE:
            __RCC_GPIOE_CLK_ENABLE();
 80004d0:	2300      	movs	r3, #0
 80004d2:	61bb      	str	r3, [r7, #24]
 80004d4:	4b2a      	ldr	r3, [pc, #168]	@ (8000580 <Port_ClockControl+0x23c>)
 80004d6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004d8:	4a29      	ldr	r2, [pc, #164]	@ (8000580 <Port_ClockControl+0x23c>)
 80004da:	f043 0310 	orr.w	r3, r3, #16
 80004de:	6313      	str	r3, [r2, #48]	@ 0x30
 80004e0:	4b27      	ldr	r3, [pc, #156]	@ (8000580 <Port_ClockControl+0x23c>)
 80004e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004e4:	091b      	lsrs	r3, r3, #4
 80004e6:	f003 0301 	and.w	r3, r3, #1
 80004ea:	61bb      	str	r3, [r7, #24]
 80004ec:	69bb      	ldr	r3, [r7, #24]
            break;
 80004ee:	e0ba      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOF_BASE:
            __RCC_GPIOF_CLK_ENABLE();
 80004f0:	2300      	movs	r3, #0
 80004f2:	617b      	str	r3, [r7, #20]
 80004f4:	4b22      	ldr	r3, [pc, #136]	@ (8000580 <Port_ClockControl+0x23c>)
 80004f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004f8:	4a21      	ldr	r2, [pc, #132]	@ (8000580 <Port_ClockControl+0x23c>)
 80004fa:	f043 0320 	orr.w	r3, r3, #32
 80004fe:	6313      	str	r3, [r2, #48]	@ 0x30
 8000500:	4b1f      	ldr	r3, [pc, #124]	@ (8000580 <Port_ClockControl+0x23c>)
 8000502:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000504:	095b      	lsrs	r3, r3, #5
 8000506:	f003 0301 	and.w	r3, r3, #1
 800050a:	617b      	str	r3, [r7, #20]
 800050c:	697b      	ldr	r3, [r7, #20]
            break;
 800050e:	e0aa      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOG_BASE:
            __RCC_GPIOG_CLK_ENABLE();
 8000510:	2300      	movs	r3, #0
 8000512:	613b      	str	r3, [r7, #16]
 8000514:	4b1a      	ldr	r3, [pc, #104]	@ (8000580 <Port_ClockControl+0x23c>)
 8000516:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000518:	4a19      	ldr	r2, [pc, #100]	@ (8000580 <Port_ClockControl+0x23c>)
 800051a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800051e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000520:	4b17      	ldr	r3, [pc, #92]	@ (8000580 <Port_ClockControl+0x23c>)
 8000522:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000524:	099b      	lsrs	r3, r3, #6
 8000526:	f003 0301 	and.w	r3, r3, #1
 800052a:	613b      	str	r3, [r7, #16]
 800052c:	693b      	ldr	r3, [r7, #16]
            break;
 800052e:	e09a      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOH_BASE:
            __RCC_GPIOH_CLK_ENABLE();
 8000530:	2300      	movs	r3, #0
 8000532:	60fb      	str	r3, [r7, #12]
 8000534:	4b12      	ldr	r3, [pc, #72]	@ (8000580 <Port_ClockControl+0x23c>)
 8000536:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000538:	4a11      	ldr	r2, [pc, #68]	@ (8000580 <Port_ClockControl+0x23c>)
 800053a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800053e:	6313      	str	r3, [r2, #48]	@ 0x30
 8000540:	4b0f      	ldr	r3, [pc, #60]	@ (8000580 <Port_ClockControl+0x23c>)
 8000542:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000544:	09db      	lsrs	r3, r3, #7
 8000546:	f003 0301 	and.w	r3, r3, #1
 800054a:	60fb      	str	r3, [r7, #12]
 800054c:	68fb      	ldr	r3, [r7, #12]
            break;
 800054e:	e08a      	b.n	8000666 <Port_ClockControl+0x322>
 8000550:	40020000 	.word	0x40020000
 8000554:	40020400 	.word	0x40020400
 8000558:	40020800 	.word	0x40020800
 800055c:	40020c00 	.word	0x40020c00
 8000560:	40021000 	.word	0x40021000
 8000564:	40021400 	.word	0x40021400
 8000568:	40021800 	.word	0x40021800
 800056c:	40021c00 	.word	0x40021c00
 8000570:	200000e6 	.word	0x200000e6
 8000574:	2000004c 	.word	0x2000004c
 8000578:	200000b4 	.word	0x200000b4
 800057c:	20000080 	.word	0x20000080
 8000580:	40023800 	.word	0x40023800
        }
    }
    else
    {
        switch (GPIO)
 8000584:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000586:	4a3b      	ldr	r2, [pc, #236]	@ (8000674 <Port_ClockControl+0x330>)
 8000588:	4293      	cmp	r3, r2
 800058a:	d065      	beq.n	8000658 <Port_ClockControl+0x314>
 800058c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800058e:	4a39      	ldr	r2, [pc, #228]	@ (8000674 <Port_ClockControl+0x330>)
 8000590:	4293      	cmp	r3, r2
 8000592:	d868      	bhi.n	8000666 <Port_ClockControl+0x322>
 8000594:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8000596:	4a38      	ldr	r2, [pc, #224]	@ (8000678 <Port_ClockControl+0x334>)
 8000598:	4293      	cmp	r3, r2
 800059a:	d056      	beq.n	800064a <Port_ClockControl+0x306>
 800059c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800059e:	4a36      	ldr	r2, [pc, #216]	@ (8000678 <Port_ClockControl+0x334>)
 80005a0:	4293      	cmp	r3, r2
 80005a2:	d860      	bhi.n	8000666 <Port_ClockControl+0x322>
 80005a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005a6:	4a35      	ldr	r2, [pc, #212]	@ (800067c <Port_ClockControl+0x338>)
 80005a8:	4293      	cmp	r3, r2
 80005aa:	d047      	beq.n	800063c <Port_ClockControl+0x2f8>
 80005ac:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005ae:	4a33      	ldr	r2, [pc, #204]	@ (800067c <Port_ClockControl+0x338>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d858      	bhi.n	8000666 <Port_ClockControl+0x322>
 80005b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005b6:	4a32      	ldr	r2, [pc, #200]	@ (8000680 <Port_ClockControl+0x33c>)
 80005b8:	4293      	cmp	r3, r2
 80005ba:	d038      	beq.n	800062e <Port_ClockControl+0x2ea>
 80005bc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005be:	4a30      	ldr	r2, [pc, #192]	@ (8000680 <Port_ClockControl+0x33c>)
 80005c0:	4293      	cmp	r3, r2
 80005c2:	d850      	bhi.n	8000666 <Port_ClockControl+0x322>
 80005c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005c6:	4a2f      	ldr	r2, [pc, #188]	@ (8000684 <Port_ClockControl+0x340>)
 80005c8:	4293      	cmp	r3, r2
 80005ca:	d029      	beq.n	8000620 <Port_ClockControl+0x2dc>
 80005cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005ce:	4a2d      	ldr	r2, [pc, #180]	@ (8000684 <Port_ClockControl+0x340>)
 80005d0:	4293      	cmp	r3, r2
 80005d2:	d848      	bhi.n	8000666 <Port_ClockControl+0x322>
 80005d4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005d6:	4a2c      	ldr	r2, [pc, #176]	@ (8000688 <Port_ClockControl+0x344>)
 80005d8:	4293      	cmp	r3, r2
 80005da:	d01a      	beq.n	8000612 <Port_ClockControl+0x2ce>
 80005dc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005de:	4a2a      	ldr	r2, [pc, #168]	@ (8000688 <Port_ClockControl+0x344>)
 80005e0:	4293      	cmp	r3, r2
 80005e2:	d840      	bhi.n	8000666 <Port_ClockControl+0x322>
 80005e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005e6:	4a29      	ldr	r2, [pc, #164]	@ (800068c <Port_ClockControl+0x348>)
 80005e8:	4293      	cmp	r3, r2
 80005ea:	d004      	beq.n	80005f6 <Port_ClockControl+0x2b2>
 80005ec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80005ee:	4a28      	ldr	r2, [pc, #160]	@ (8000690 <Port_ClockControl+0x34c>)
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d007      	beq.n	8000604 <Port_ClockControl+0x2c0>
 80005f4:	e037      	b.n	8000666 <Port_ClockControl+0x322>
        {
        case GPIOA_BASE:
            __RCC_GPIOA_CLK_DISABLE();
 80005f6:	4b27      	ldr	r3, [pc, #156]	@ (8000694 <Port_ClockControl+0x350>)
 80005f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fa:	4a26      	ldr	r2, [pc, #152]	@ (8000694 <Port_ClockControl+0x350>)
 80005fc:	f023 0301 	bic.w	r3, r3, #1
 8000600:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 8000602:	e030      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOB_BASE:
            __RCC_GPIOB_CLK_DISABLE();
 8000604:	4b23      	ldr	r3, [pc, #140]	@ (8000694 <Port_ClockControl+0x350>)
 8000606:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000608:	4a22      	ldr	r2, [pc, #136]	@ (8000694 <Port_ClockControl+0x350>)
 800060a:	f023 0302 	bic.w	r3, r3, #2
 800060e:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 8000610:	e029      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOC_BASE:
            __RCC_GPIOC_CLK_DISABLE();
 8000612:	4b20      	ldr	r3, [pc, #128]	@ (8000694 <Port_ClockControl+0x350>)
 8000614:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000616:	4a1f      	ldr	r2, [pc, #124]	@ (8000694 <Port_ClockControl+0x350>)
 8000618:	f023 0304 	bic.w	r3, r3, #4
 800061c:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 800061e:	e022      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOD_BASE:
            __RCC_GPIOD_CLK_DISABLE();
 8000620:	4b1c      	ldr	r3, [pc, #112]	@ (8000694 <Port_ClockControl+0x350>)
 8000622:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000624:	4a1b      	ldr	r2, [pc, #108]	@ (8000694 <Port_ClockControl+0x350>)
 8000626:	f023 0308 	bic.w	r3, r3, #8
 800062a:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 800062c:	e01b      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOE_BASE:
            __RCC_GPIOE_CLK_DISABLE();
 800062e:	4b19      	ldr	r3, [pc, #100]	@ (8000694 <Port_ClockControl+0x350>)
 8000630:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000632:	4a18      	ldr	r2, [pc, #96]	@ (8000694 <Port_ClockControl+0x350>)
 8000634:	f023 0310 	bic.w	r3, r3, #16
 8000638:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 800063a:	e014      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOF_BASE:
            __RCC_GPIOF_CLK_DISABLE();
 800063c:	4b15      	ldr	r3, [pc, #84]	@ (8000694 <Port_ClockControl+0x350>)
 800063e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000640:	4a14      	ldr	r2, [pc, #80]	@ (8000694 <Port_ClockControl+0x350>)
 8000642:	f023 0320 	bic.w	r3, r3, #32
 8000646:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 8000648:	e00d      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOG_BASE:
            __RCC_GPIOG_CLK_DISABLE();
 800064a:	4b12      	ldr	r3, [pc, #72]	@ (8000694 <Port_ClockControl+0x350>)
 800064c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800064e:	4a11      	ldr	r2, [pc, #68]	@ (8000694 <Port_ClockControl+0x350>)
 8000650:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000654:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 8000656:	e006      	b.n	8000666 <Port_ClockControl+0x322>

        case GPIOH_BASE:
            __RCC_GPIOH_CLK_DISABLE();
 8000658:	4b0e      	ldr	r3, [pc, #56]	@ (8000694 <Port_ClockControl+0x350>)
 800065a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800065c:	4a0d      	ldr	r2, [pc, #52]	@ (8000694 <Port_ClockControl+0x350>)
 800065e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000662:	6313      	str	r3, [r2, #48]	@ 0x30
            break;
 8000664:	bf00      	nop
        }
    }
    return E_OK;
 8000666:	2300      	movs	r3, #0
}
 8000668:	4618      	mov	r0, r3
 800066a:	3734      	adds	r7, #52	@ 0x34
 800066c:	46bd      	mov	sp, r7
 800066e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000672:	4770      	bx	lr
 8000674:	40021c00 	.word	0x40021c00
 8000678:	40021800 	.word	0x40021800
 800067c:	40021400 	.word	0x40021400
 8000680:	40021000 	.word	0x40021000
 8000684:	40020c00 	.word	0x40020c00
 8000688:	40020800 	.word	0x40020800
 800068c:	40020000 	.word	0x40020000
 8000690:	40020400 	.word	0x40020400
 8000694:	40023800 	.word	0x40023800

08000698 <Port_Init>:

uint8_t Port_Init(const Port_ConfigType *ConfigPtr)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	b088      	sub	sp, #32
 800069c:	af00      	add	r7, sp, #0
 800069e:	6078      	str	r0, [r7, #4]
    uint32_t pin = 0;
 80006a0:	2300      	movs	r3, #0
 80006a2:	61fb      	str	r3, [r7, #28]
    Port_PinType pin_pos = 0;
 80006a4:	2300      	movs	r3, #0
 80006a6:	82bb      	strh	r3, [r7, #20]
    Port_PinType cfg_pin_pos = 0;
 80006a8:	2300      	movs	r3, #0
 80006aa:	827b      	strh	r3, [r7, #18]
    uint32_t tmp_reg = 0;
 80006ac:	2300      	movs	r3, #0
 80006ae:	61bb      	str	r3, [r7, #24]
    uint8_t err = 0;
 80006b0:	2300      	movs	r3, #0
 80006b2:	75fb      	strb	r3, [r7, #23]

    if (!(IS_GPIO_ALL_INSTANCE(ConfigPtr->Port)))
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	681b      	ldr	r3, [r3, #0]
 80006b8:	4a80      	ldr	r2, [pc, #512]	@ (80008bc <Port_Init+0x224>)
 80006ba:	4293      	cmp	r3, r2
 80006bc:	d03c      	beq.n	8000738 <Port_Init+0xa0>
 80006be:	687b      	ldr	r3, [r7, #4]
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	4a7f      	ldr	r2, [pc, #508]	@ (80008c0 <Port_Init+0x228>)
 80006c4:	4293      	cmp	r3, r2
 80006c6:	d037      	beq.n	8000738 <Port_Init+0xa0>
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	4a7d      	ldr	r2, [pc, #500]	@ (80008c4 <Port_Init+0x22c>)
 80006ce:	4293      	cmp	r3, r2
 80006d0:	d032      	beq.n	8000738 <Port_Init+0xa0>
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	4a7c      	ldr	r2, [pc, #496]	@ (80008c8 <Port_Init+0x230>)
 80006d8:	4293      	cmp	r3, r2
 80006da:	d02d      	beq.n	8000738 <Port_Init+0xa0>
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	681b      	ldr	r3, [r3, #0]
 80006e0:	4a7a      	ldr	r2, [pc, #488]	@ (80008cc <Port_Init+0x234>)
 80006e2:	4293      	cmp	r3, r2
 80006e4:	d028      	beq.n	8000738 <Port_Init+0xa0>
 80006e6:	687b      	ldr	r3, [r7, #4]
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	4a79      	ldr	r2, [pc, #484]	@ (80008d0 <Port_Init+0x238>)
 80006ec:	4293      	cmp	r3, r2
 80006ee:	d023      	beq.n	8000738 <Port_Init+0xa0>
 80006f0:	687b      	ldr	r3, [r7, #4]
 80006f2:	681b      	ldr	r3, [r3, #0]
 80006f4:	4a77      	ldr	r2, [pc, #476]	@ (80008d4 <Port_Init+0x23c>)
 80006f6:	4293      	cmp	r3, r2
 80006f8:	d01e      	beq.n	8000738 <Port_Init+0xa0>
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	4a76      	ldr	r2, [pc, #472]	@ (80008d8 <Port_Init+0x240>)
 8000700:	4293      	cmp	r3, r2
 8000702:	d019      	beq.n	8000738 <Port_Init+0xa0>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PORT;
 8000704:	4b75      	ldr	r3, [pc, #468]	@ (80008dc <Port_Init+0x244>)
 8000706:	781b      	ldrb	r3, [r3, #0]
 8000708:	461a      	mov	r2, r3
 800070a:	4b75      	ldr	r3, [pc, #468]	@ (80008e0 <Port_Init+0x248>)
 800070c:	2101      	movs	r1, #1
 800070e:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 8000710:	4b72      	ldr	r3, [pc, #456]	@ (80008dc <Port_Init+0x244>)
 8000712:	781b      	ldrb	r3, [r3, #0]
 8000714:	461a      	mov	r2, r3
 8000716:	4b73      	ldr	r3, [pc, #460]	@ (80008e4 <Port_Init+0x24c>)
 8000718:	217c      	movs	r1, #124	@ 0x7c
 800071a:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 800071c:	4b6f      	ldr	r3, [pc, #444]	@ (80008dc <Port_Init+0x244>)
 800071e:	781b      	ldrb	r3, [r3, #0]
 8000720:	461a      	mov	r2, r3
 8000722:	4b71      	ldr	r3, [pc, #452]	@ (80008e8 <Port_Init+0x250>)
 8000724:	2101      	movs	r1, #1
 8000726:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 8000728:	4b6c      	ldr	r3, [pc, #432]	@ (80008dc <Port_Init+0x244>)
 800072a:	781b      	ldrb	r3, [r3, #0]
 800072c:	3301      	adds	r3, #1
 800072e:	b2da      	uxtb	r2, r3
 8000730:	4b6a      	ldr	r3, [pc, #424]	@ (80008dc <Port_Init+0x244>)
 8000732:	701a      	strb	r2, [r3, #0]
        err = 1;
 8000734:	2301      	movs	r3, #1
 8000736:	75fb      	strb	r3, [r7, #23]
    }

    if (!(IS_PORT_PIN(ConfigPtr->Pin)))
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	889b      	ldrh	r3, [r3, #4]
 800073c:	2b00      	cmp	r3, #0
 800073e:	d119      	bne.n	8000774 <Port_Init+0xdc>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PIN;
 8000740:	4b66      	ldr	r3, [pc, #408]	@ (80008dc <Port_Init+0x244>)
 8000742:	781b      	ldrb	r3, [r3, #0]
 8000744:	461a      	mov	r2, r3
 8000746:	4b66      	ldr	r3, [pc, #408]	@ (80008e0 <Port_Init+0x248>)
 8000748:	2102      	movs	r1, #2
 800074a:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 800074c:	4b63      	ldr	r3, [pc, #396]	@ (80008dc <Port_Init+0x244>)
 800074e:	781b      	ldrb	r3, [r3, #0]
 8000750:	461a      	mov	r2, r3
 8000752:	4b64      	ldr	r3, [pc, #400]	@ (80008e4 <Port_Init+0x24c>)
 8000754:	217c      	movs	r1, #124	@ 0x7c
 8000756:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 8000758:	4b60      	ldr	r3, [pc, #384]	@ (80008dc <Port_Init+0x244>)
 800075a:	781b      	ldrb	r3, [r3, #0]
 800075c:	461a      	mov	r2, r3
 800075e:	4b62      	ldr	r3, [pc, #392]	@ (80008e8 <Port_Init+0x250>)
 8000760:	2101      	movs	r1, #1
 8000762:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 8000764:	4b5d      	ldr	r3, [pc, #372]	@ (80008dc <Port_Init+0x244>)
 8000766:	781b      	ldrb	r3, [r3, #0]
 8000768:	3301      	adds	r3, #1
 800076a:	b2da      	uxtb	r2, r3
 800076c:	4b5b      	ldr	r3, [pc, #364]	@ (80008dc <Port_Init+0x244>)
 800076e:	701a      	strb	r2, [r3, #0]
        err = 2;
 8000770:	2302      	movs	r3, #2
 8000772:	75fb      	strb	r3, [r7, #23]
    }

    if (!(IS_PORT_PIN_MODE(ConfigPtr->Mode)))
 8000774:	687b      	ldr	r3, [r7, #4]
 8000776:	689b      	ldr	r3, [r3, #8]
 8000778:	2b00      	cmp	r3, #0
 800077a:	d04b      	beq.n	8000814 <Port_Init+0x17c>
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	689b      	ldr	r3, [r3, #8]
 8000780:	2b01      	cmp	r3, #1
 8000782:	d047      	beq.n	8000814 <Port_Init+0x17c>
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	689b      	ldr	r3, [r3, #8]
 8000788:	2b11      	cmp	r3, #17
 800078a:	d043      	beq.n	8000814 <Port_Init+0x17c>
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	689b      	ldr	r3, [r3, #8]
 8000790:	2b02      	cmp	r3, #2
 8000792:	d03f      	beq.n	8000814 <Port_Init+0x17c>
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	689b      	ldr	r3, [r3, #8]
 8000798:	2b12      	cmp	r3, #18
 800079a:	d03b      	beq.n	8000814 <Port_Init+0x17c>
 800079c:	687b      	ldr	r3, [r7, #4]
 800079e:	689b      	ldr	r3, [r3, #8]
 80007a0:	f5b3 1f88 	cmp.w	r3, #1114112	@ 0x110000
 80007a4:	d036      	beq.n	8000814 <Port_Init+0x17c>
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	689b      	ldr	r3, [r3, #8]
 80007aa:	f5b3 1f04 	cmp.w	r3, #2162688	@ 0x210000
 80007ae:	d031      	beq.n	8000814 <Port_Init+0x17c>
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	689b      	ldr	r3, [r3, #8]
 80007b4:	f5b3 1f44 	cmp.w	r3, #3211264	@ 0x310000
 80007b8:	d02c      	beq.n	8000814 <Port_Init+0x17c>
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	689b      	ldr	r3, [r3, #8]
 80007be:	f5b3 1f90 	cmp.w	r3, #1179648	@ 0x120000
 80007c2:	d027      	beq.n	8000814 <Port_Init+0x17c>
 80007c4:	687b      	ldr	r3, [r7, #4]
 80007c6:	689b      	ldr	r3, [r3, #8]
 80007c8:	f5b3 1f08 	cmp.w	r3, #2228224	@ 0x220000
 80007cc:	d022      	beq.n	8000814 <Port_Init+0x17c>
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	689b      	ldr	r3, [r3, #8]
 80007d2:	f5b3 1f48 	cmp.w	r3, #3276800	@ 0x320000
 80007d6:	d01d      	beq.n	8000814 <Port_Init+0x17c>
 80007d8:	687b      	ldr	r3, [r7, #4]
 80007da:	689b      	ldr	r3, [r3, #8]
 80007dc:	2b03      	cmp	r3, #3
 80007de:	d019      	beq.n	8000814 <Port_Init+0x17c>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_MODE;
 80007e0:	4b3e      	ldr	r3, [pc, #248]	@ (80008dc <Port_Init+0x244>)
 80007e2:	781b      	ldrb	r3, [r3, #0]
 80007e4:	461a      	mov	r2, r3
 80007e6:	4b3e      	ldr	r3, [pc, #248]	@ (80008e0 <Port_Init+0x248>)
 80007e8:	2103      	movs	r1, #3
 80007ea:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 80007ec:	4b3b      	ldr	r3, [pc, #236]	@ (80008dc <Port_Init+0x244>)
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	461a      	mov	r2, r3
 80007f2:	4b3c      	ldr	r3, [pc, #240]	@ (80008e4 <Port_Init+0x24c>)
 80007f4:	217c      	movs	r1, #124	@ 0x7c
 80007f6:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 80007f8:	4b38      	ldr	r3, [pc, #224]	@ (80008dc <Port_Init+0x244>)
 80007fa:	781b      	ldrb	r3, [r3, #0]
 80007fc:	461a      	mov	r2, r3
 80007fe:	4b3a      	ldr	r3, [pc, #232]	@ (80008e8 <Port_Init+0x250>)
 8000800:	2101      	movs	r1, #1
 8000802:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 8000804:	4b35      	ldr	r3, [pc, #212]	@ (80008dc <Port_Init+0x244>)
 8000806:	781b      	ldrb	r3, [r3, #0]
 8000808:	3301      	adds	r3, #1
 800080a:	b2da      	uxtb	r2, r3
 800080c:	4b33      	ldr	r3, [pc, #204]	@ (80008dc <Port_Init+0x244>)
 800080e:	701a      	strb	r2, [r3, #0]
        err = 3;
 8000810:	2303      	movs	r3, #3
 8000812:	75fb      	strb	r3, [r7, #23]
    }

    if (err)
 8000814:	7dfb      	ldrb	r3, [r7, #23]
 8000816:	2b00      	cmp	r3, #0
 8000818:	d001      	beq.n	800081e <Port_Init+0x186>
        return E_NOK;
 800081a:	2301      	movs	r3, #1
 800081c:	e26f      	b.n	8000cfe <Port_Init+0x666>

    Port_ClockControl(ConfigPtr->Port, 1U); /* Enable GPIO Port Clock */
 800081e:	687b      	ldr	r3, [r7, #4]
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	2101      	movs	r1, #1
 8000824:	4618      	mov	r0, r3
 8000826:	f7ff fd8d 	bl	8000344 <Port_ClockControl>

    for (pin = 0; pin < PORT_LENGTH; pin++)
 800082a:	2300      	movs	r3, #0
 800082c:	61fb      	str	r3, [r7, #28]
 800082e:	e25c      	b.n	8000cea <Port_Init+0x652>
    {
        pin_pos = (1U << pin);
 8000830:	2201      	movs	r2, #1
 8000832:	69fb      	ldr	r3, [r7, #28]
 8000834:	fa02 f303 	lsl.w	r3, r2, r3
 8000838:	82bb      	strh	r3, [r7, #20]
        cfg_pin_pos = ConfigPtr->Pin & pin_pos;
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	889a      	ldrh	r2, [r3, #4]
 800083e:	8abb      	ldrh	r3, [r7, #20]
 8000840:	4013      	ands	r3, r2
 8000842:	827b      	strh	r3, [r7, #18]

        if (pin_pos == cfg_pin_pos)
 8000844:	8aba      	ldrh	r2, [r7, #20]
 8000846:	8a7b      	ldrh	r3, [r7, #18]
 8000848:	429a      	cmp	r2, r3
 800084a:	f040 824b 	bne.w	8000ce4 <Port_Init+0x64c>
        {
            if (((ConfigPtr->Mode & PORT_MODE) == MODE_OUTPUT) || ((ConfigPtr->Mode & PORT_MODE) == MODE_AF))
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	689b      	ldr	r3, [r3, #8]
 8000852:	f003 0303 	and.w	r3, r3, #3
 8000856:	2b01      	cmp	r3, #1
 8000858:	d005      	beq.n	8000866 <Port_Init+0x1ce>
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	689b      	ldr	r3, [r3, #8]
 800085e:	f003 0303 	and.w	r3, r3, #3
 8000862:	2b02      	cmp	r3, #2
 8000864:	d179      	bne.n	800095a <Port_Init+0x2c2>
            {
                if (!(IS_PORT_SPEED(ConfigPtr->Speed)))
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	691b      	ldr	r3, [r3, #16]
 800086a:	2b00      	cmp	r3, #0
 800086c:	d03e      	beq.n	80008ec <Port_Init+0x254>
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	691b      	ldr	r3, [r3, #16]
 8000872:	2b01      	cmp	r3, #1
 8000874:	d03a      	beq.n	80008ec <Port_Init+0x254>
 8000876:	687b      	ldr	r3, [r7, #4]
 8000878:	691b      	ldr	r3, [r3, #16]
 800087a:	2b02      	cmp	r3, #2
 800087c:	d036      	beq.n	80008ec <Port_Init+0x254>
 800087e:	687b      	ldr	r3, [r7, #4]
 8000880:	691b      	ldr	r3, [r3, #16]
 8000882:	2b03      	cmp	r3, #3
 8000884:	d032      	beq.n	80008ec <Port_Init+0x254>
                {
                    DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_SPEED;
 8000886:	4b15      	ldr	r3, [pc, #84]	@ (80008dc <Port_Init+0x244>)
 8000888:	781b      	ldrb	r3, [r3, #0]
 800088a:	461a      	mov	r2, r3
 800088c:	4b14      	ldr	r3, [pc, #80]	@ (80008e0 <Port_Init+0x248>)
 800088e:	2104      	movs	r1, #4
 8000890:	5499      	strb	r1, [r3, r2]
                    DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 8000892:	4b12      	ldr	r3, [pc, #72]	@ (80008dc <Port_Init+0x244>)
 8000894:	781b      	ldrb	r3, [r3, #0]
 8000896:	461a      	mov	r2, r3
 8000898:	4b12      	ldr	r3, [pc, #72]	@ (80008e4 <Port_Init+0x24c>)
 800089a:	217c      	movs	r1, #124	@ 0x7c
 800089c:	5499      	strb	r1, [r3, r2]
                    DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 800089e:	4b0f      	ldr	r3, [pc, #60]	@ (80008dc <Port_Init+0x244>)
 80008a0:	781b      	ldrb	r3, [r3, #0]
 80008a2:	461a      	mov	r2, r3
 80008a4:	4b10      	ldr	r3, [pc, #64]	@ (80008e8 <Port_Init+0x250>)
 80008a6:	2101      	movs	r1, #1
 80008a8:	5499      	strb	r1, [r3, r2]
                    Error_Code_Index++;
 80008aa:	4b0c      	ldr	r3, [pc, #48]	@ (80008dc <Port_Init+0x244>)
 80008ac:	781b      	ldrb	r3, [r3, #0]
 80008ae:	3301      	adds	r3, #1
 80008b0:	b2da      	uxtb	r2, r3
 80008b2:	4b0a      	ldr	r3, [pc, #40]	@ (80008dc <Port_Init+0x244>)
 80008b4:	701a      	strb	r2, [r3, #0]
                    err = 4;
 80008b6:	2304      	movs	r3, #4
 80008b8:	75fb      	strb	r3, [r7, #23]
 80008ba:	e04e      	b.n	800095a <Port_Init+0x2c2>
 80008bc:	40020000 	.word	0x40020000
 80008c0:	40020400 	.word	0x40020400
 80008c4:	40020800 	.word	0x40020800
 80008c8:	40020c00 	.word	0x40020c00
 80008cc:	40021000 	.word	0x40021000
 80008d0:	40021400 	.word	0x40021400
 80008d4:	40021800 	.word	0x40021800
 80008d8:	40021c00 	.word	0x40021c00
 80008dc:	200000e6 	.word	0x200000e6
 80008e0:	2000004c 	.word	0x2000004c
 80008e4:	200000b4 	.word	0x200000b4
 80008e8:	20000080 	.word	0x20000080
                }
                else
                {
                    /* SPEED Config */
                    tmp_reg = ConfigPtr->Port->OSPEEDR;
 80008ec:	687b      	ldr	r3, [r7, #4]
 80008ee:	681b      	ldr	r3, [r3, #0]
 80008f0:	689b      	ldr	r3, [r3, #8]
 80008f2:	61bb      	str	r3, [r7, #24]
                    tmp_reg &= ~(3 << (pin * 2));
 80008f4:	69fb      	ldr	r3, [r7, #28]
 80008f6:	005b      	lsls	r3, r3, #1
 80008f8:	2203      	movs	r2, #3
 80008fa:	fa02 f303 	lsl.w	r3, r2, r3
 80008fe:	43db      	mvns	r3, r3
 8000900:	461a      	mov	r2, r3
 8000902:	69bb      	ldr	r3, [r7, #24]
 8000904:	4013      	ands	r3, r2
 8000906:	61bb      	str	r3, [r7, #24]
                    tmp_reg |= (ConfigPtr->Speed << (pin * 2));
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	691a      	ldr	r2, [r3, #16]
 800090c:	69fb      	ldr	r3, [r7, #28]
 800090e:	005b      	lsls	r3, r3, #1
 8000910:	fa02 f303 	lsl.w	r3, r2, r3
 8000914:	69ba      	ldr	r2, [r7, #24]
 8000916:	4313      	orrs	r3, r2
 8000918:	61bb      	str	r3, [r7, #24]
                    ConfigPtr->Port->OSPEEDR = tmp_reg;
 800091a:	687b      	ldr	r3, [r7, #4]
 800091c:	681b      	ldr	r3, [r3, #0]
 800091e:	69ba      	ldr	r2, [r7, #24]
 8000920:	609a      	str	r2, [r3, #8]

                    /* Open Drain or PushPull Config */
                    tmp_reg = ConfigPtr->Port->OTYPER;
 8000922:	687b      	ldr	r3, [r7, #4]
 8000924:	681b      	ldr	r3, [r3, #0]
 8000926:	685b      	ldr	r3, [r3, #4]
 8000928:	61bb      	str	r3, [r7, #24]
                    tmp_reg &= ~(1 << (pin * 1));
 800092a:	2201      	movs	r2, #1
 800092c:	69fb      	ldr	r3, [r7, #28]
 800092e:	fa02 f303 	lsl.w	r3, r2, r3
 8000932:	43db      	mvns	r3, r3
 8000934:	461a      	mov	r2, r3
 8000936:	69bb      	ldr	r3, [r7, #24]
 8000938:	4013      	ands	r3, r2
 800093a:	61bb      	str	r3, [r7, #24]
                    tmp_reg |= (((ConfigPtr->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_POS) << pin);
 800093c:	687b      	ldr	r3, [r7, #4]
 800093e:	689b      	ldr	r3, [r3, #8]
 8000940:	091b      	lsrs	r3, r3, #4
 8000942:	f003 0201 	and.w	r2, r3, #1
 8000946:	69fb      	ldr	r3, [r7, #28]
 8000948:	fa02 f303 	lsl.w	r3, r2, r3
 800094c:	69ba      	ldr	r2, [r7, #24]
 800094e:	4313      	orrs	r3, r2
 8000950:	61bb      	str	r3, [r7, #24]
                    ConfigPtr->Port->OTYPER = tmp_reg;
 8000952:	687b      	ldr	r3, [r7, #4]
 8000954:	681b      	ldr	r3, [r3, #0]
 8000956:	69ba      	ldr	r2, [r7, #24]
 8000958:	605a      	str	r2, [r3, #4]
                }
            }

            if ((ConfigPtr->Mode & PORT_MODE) == MODE_AF)
 800095a:	687b      	ldr	r3, [r7, #4]
 800095c:	689b      	ldr	r3, [r3, #8]
 800095e:	f003 0303 	and.w	r3, r3, #3
 8000962:	2b02      	cmp	r3, #2
 8000964:	d161      	bne.n	8000a2a <Port_Init+0x392>
            {
                if (!(IS_PORT_AF(ConfigPtr->Alternate)))
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	695b      	ldr	r3, [r3, #20]
 800096a:	2b05      	cmp	r3, #5
 800096c:	d036      	beq.n	80009dc <Port_Init+0x344>
 800096e:	687b      	ldr	r3, [r7, #4]
 8000970:	695b      	ldr	r3, [r3, #20]
 8000972:	2b05      	cmp	r3, #5
 8000974:	d032      	beq.n	80009dc <Port_Init+0x344>
 8000976:	687b      	ldr	r3, [r7, #4]
 8000978:	695b      	ldr	r3, [r3, #20]
 800097a:	2b05      	cmp	r3, #5
 800097c:	d02e      	beq.n	80009dc <Port_Init+0x344>
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	695b      	ldr	r3, [r3, #20]
 8000982:	2b05      	cmp	r3, #5
 8000984:	d02a      	beq.n	80009dc <Port_Init+0x344>
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	695b      	ldr	r3, [r3, #20]
 800098a:	2b06      	cmp	r3, #6
 800098c:	d026      	beq.n	80009dc <Port_Init+0x344>
 800098e:	687b      	ldr	r3, [r7, #4]
 8000990:	695b      	ldr	r3, [r3, #20]
 8000992:	2b06      	cmp	r3, #6
 8000994:	d022      	beq.n	80009dc <Port_Init+0x344>
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	695b      	ldr	r3, [r3, #20]
 800099a:	2b06      	cmp	r3, #6
 800099c:	d01e      	beq.n	80009dc <Port_Init+0x344>
 800099e:	687b      	ldr	r3, [r7, #4]
 80009a0:	695b      	ldr	r3, [r3, #20]
 80009a2:	2b06      	cmp	r3, #6
 80009a4:	d01a      	beq.n	80009dc <Port_Init+0x344>
                {
                    DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_AF;
 80009a6:	4b80      	ldr	r3, [pc, #512]	@ (8000ba8 <Port_Init+0x510>)
 80009a8:	781b      	ldrb	r3, [r3, #0]
 80009aa:	461a      	mov	r2, r3
 80009ac:	4b7f      	ldr	r3, [pc, #508]	@ (8000bac <Port_Init+0x514>)
 80009ae:	2106      	movs	r1, #6
 80009b0:	5499      	strb	r1, [r3, r2]
                    DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 80009b2:	4b7d      	ldr	r3, [pc, #500]	@ (8000ba8 <Port_Init+0x510>)
 80009b4:	781b      	ldrb	r3, [r3, #0]
 80009b6:	461a      	mov	r2, r3
 80009b8:	4b7d      	ldr	r3, [pc, #500]	@ (8000bb0 <Port_Init+0x518>)
 80009ba:	217c      	movs	r1, #124	@ 0x7c
 80009bc:	5499      	strb	r1, [r3, r2]
                    DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 80009be:	4b7a      	ldr	r3, [pc, #488]	@ (8000ba8 <Port_Init+0x510>)
 80009c0:	781b      	ldrb	r3, [r3, #0]
 80009c2:	461a      	mov	r2, r3
 80009c4:	4b7b      	ldr	r3, [pc, #492]	@ (8000bb4 <Port_Init+0x51c>)
 80009c6:	2101      	movs	r1, #1
 80009c8:	5499      	strb	r1, [r3, r2]
                    Error_Code_Index++;
 80009ca:	4b77      	ldr	r3, [pc, #476]	@ (8000ba8 <Port_Init+0x510>)
 80009cc:	781b      	ldrb	r3, [r3, #0]
 80009ce:	3301      	adds	r3, #1
 80009d0:	b2da      	uxtb	r2, r3
 80009d2:	4b75      	ldr	r3, [pc, #468]	@ (8000ba8 <Port_Init+0x510>)
 80009d4:	701a      	strb	r2, [r3, #0]
                    err = 5;
 80009d6:	2305      	movs	r3, #5
 80009d8:	75fb      	strb	r3, [r7, #23]
 80009da:	e026      	b.n	8000a2a <Port_Init+0x392>
                }
                else
                {
                    /* AF Config */
                    tmp_reg = ConfigPtr->Port->AFR[pin >> 3];
 80009dc:	687b      	ldr	r3, [r7, #4]
 80009de:	681b      	ldr	r3, [r3, #0]
 80009e0:	69fa      	ldr	r2, [r7, #28]
 80009e2:	08d2      	lsrs	r2, r2, #3
 80009e4:	3208      	adds	r2, #8
 80009e6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80009ea:	61bb      	str	r3, [r7, #24]
                    tmp_reg &= ~(0x0F << ((uint32_t)(pin & 7ul) * 4ul));
 80009ec:	69fb      	ldr	r3, [r7, #28]
 80009ee:	f003 0307 	and.w	r3, r3, #7
 80009f2:	009b      	lsls	r3, r3, #2
 80009f4:	220f      	movs	r2, #15
 80009f6:	fa02 f303 	lsl.w	r3, r2, r3
 80009fa:	43db      	mvns	r3, r3
 80009fc:	461a      	mov	r2, r3
 80009fe:	69bb      	ldr	r3, [r7, #24]
 8000a00:	4013      	ands	r3, r2
 8000a02:	61bb      	str	r3, [r7, #24]
                    tmp_reg |= (uint32_t)((uint32_t)ConfigPtr->Alternate << ((uint32_t)pin & 7ul) * 4ul);
 8000a04:	687b      	ldr	r3, [r7, #4]
 8000a06:	695a      	ldr	r2, [r3, #20]
 8000a08:	69fb      	ldr	r3, [r7, #28]
 8000a0a:	f003 0307 	and.w	r3, r3, #7
 8000a0e:	009b      	lsls	r3, r3, #2
 8000a10:	fa02 f303 	lsl.w	r3, r2, r3
 8000a14:	69ba      	ldr	r2, [r7, #24]
 8000a16:	4313      	orrs	r3, r2
 8000a18:	61bb      	str	r3, [r7, #24]
                    ConfigPtr->Port->AFR[pin >> 3] = tmp_reg;
 8000a1a:	687b      	ldr	r3, [r7, #4]
 8000a1c:	681b      	ldr	r3, [r3, #0]
 8000a1e:	69fa      	ldr	r2, [r7, #28]
 8000a20:	08d2      	lsrs	r2, r2, #3
 8000a22:	3208      	adds	r2, #8
 8000a24:	69b9      	ldr	r1, [r7, #24]
 8000a26:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
                }
            }

            if ((ConfigPtr->Mode & PORT_MODE) != MODE_ANALOG)
 8000a2a:	687b      	ldr	r3, [r7, #4]
 8000a2c:	689b      	ldr	r3, [r3, #8]
 8000a2e:	f003 0303 	and.w	r3, r3, #3
 8000a32:	2b03      	cmp	r3, #3
 8000a34:	d041      	beq.n	8000aba <Port_Init+0x422>
            {
                if (!(IS_PORT_PIN_PULL(ConfigPtr->Pull)))
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	68db      	ldr	r3, [r3, #12]
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	d022      	beq.n	8000a84 <Port_Init+0x3ec>
 8000a3e:	687b      	ldr	r3, [r7, #4]
 8000a40:	68db      	ldr	r3, [r3, #12]
 8000a42:	2b01      	cmp	r3, #1
 8000a44:	d01e      	beq.n	8000a84 <Port_Init+0x3ec>
 8000a46:	687b      	ldr	r3, [r7, #4]
 8000a48:	68db      	ldr	r3, [r3, #12]
 8000a4a:	2b02      	cmp	r3, #2
 8000a4c:	d01a      	beq.n	8000a84 <Port_Init+0x3ec>
                {
                    DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PULL;
 8000a4e:	4b56      	ldr	r3, [pc, #344]	@ (8000ba8 <Port_Init+0x510>)
 8000a50:	781b      	ldrb	r3, [r3, #0]
 8000a52:	461a      	mov	r2, r3
 8000a54:	4b55      	ldr	r3, [pc, #340]	@ (8000bac <Port_Init+0x514>)
 8000a56:	2105      	movs	r1, #5
 8000a58:	5499      	strb	r1, [r3, r2]
                    DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 8000a5a:	4b53      	ldr	r3, [pc, #332]	@ (8000ba8 <Port_Init+0x510>)
 8000a5c:	781b      	ldrb	r3, [r3, #0]
 8000a5e:	461a      	mov	r2, r3
 8000a60:	4b53      	ldr	r3, [pc, #332]	@ (8000bb0 <Port_Init+0x518>)
 8000a62:	217c      	movs	r1, #124	@ 0x7c
 8000a64:	5499      	strb	r1, [r3, r2]
                    DET_ServiceId[Error_Code_Index] = PORT_SID_INIT;
 8000a66:	4b50      	ldr	r3, [pc, #320]	@ (8000ba8 <Port_Init+0x510>)
 8000a68:	781b      	ldrb	r3, [r3, #0]
 8000a6a:	461a      	mov	r2, r3
 8000a6c:	4b51      	ldr	r3, [pc, #324]	@ (8000bb4 <Port_Init+0x51c>)
 8000a6e:	2101      	movs	r1, #1
 8000a70:	5499      	strb	r1, [r3, r2]
                    Error_Code_Index++;
 8000a72:	4b4d      	ldr	r3, [pc, #308]	@ (8000ba8 <Port_Init+0x510>)
 8000a74:	781b      	ldrb	r3, [r3, #0]
 8000a76:	3301      	adds	r3, #1
 8000a78:	b2da      	uxtb	r2, r3
 8000a7a:	4b4b      	ldr	r3, [pc, #300]	@ (8000ba8 <Port_Init+0x510>)
 8000a7c:	701a      	strb	r2, [r3, #0]
                    err = 6;
 8000a7e:	2306      	movs	r3, #6
 8000a80:	75fb      	strb	r3, [r7, #23]
 8000a82:	e01a      	b.n	8000aba <Port_Init+0x422>
                }
                else
                {
                    /* PullUp PullDown Config */
                    tmp_reg = ConfigPtr->Port->PUPDR;
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	681b      	ldr	r3, [r3, #0]
 8000a88:	68db      	ldr	r3, [r3, #12]
 8000a8a:	61bb      	str	r3, [r7, #24]
                    tmp_reg &= ~(3 << (pin * 2));
 8000a8c:	69fb      	ldr	r3, [r7, #28]
 8000a8e:	005b      	lsls	r3, r3, #1
 8000a90:	2203      	movs	r2, #3
 8000a92:	fa02 f303 	lsl.w	r3, r2, r3
 8000a96:	43db      	mvns	r3, r3
 8000a98:	461a      	mov	r2, r3
 8000a9a:	69bb      	ldr	r3, [r7, #24]
 8000a9c:	4013      	ands	r3, r2
 8000a9e:	61bb      	str	r3, [r7, #24]
                    tmp_reg |= (ConfigPtr->Pull << (pin * 2ul));
 8000aa0:	687b      	ldr	r3, [r7, #4]
 8000aa2:	68da      	ldr	r2, [r3, #12]
 8000aa4:	69fb      	ldr	r3, [r7, #28]
 8000aa6:	005b      	lsls	r3, r3, #1
 8000aa8:	fa02 f303 	lsl.w	r3, r2, r3
 8000aac:	69ba      	ldr	r2, [r7, #24]
 8000aae:	4313      	orrs	r3, r2
 8000ab0:	61bb      	str	r3, [r7, #24]
                    ConfigPtr->Port->PUPDR = tmp_reg;
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	69ba      	ldr	r2, [r7, #24]
 8000ab8:	60da      	str	r2, [r3, #12]
                }
            }

            /* Mode Config (Input, Output, Analog, AF) */
            tmp_reg = ConfigPtr->Port->MODER;
 8000aba:	687b      	ldr	r3, [r7, #4]
 8000abc:	681b      	ldr	r3, [r3, #0]
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	61bb      	str	r3, [r7, #24]
            tmp_reg &= ~(3 << (pin * 2));
 8000ac2:	69fb      	ldr	r3, [r7, #28]
 8000ac4:	005b      	lsls	r3, r3, #1
 8000ac6:	2203      	movs	r2, #3
 8000ac8:	fa02 f303 	lsl.w	r3, r2, r3
 8000acc:	43db      	mvns	r3, r3
 8000ace:	461a      	mov	r2, r3
 8000ad0:	69bb      	ldr	r3, [r7, #24]
 8000ad2:	4013      	ands	r3, r2
 8000ad4:	61bb      	str	r3, [r7, #24]
            tmp_reg |= (uint32_t)((ConfigPtr->Mode & PORT_MODE) << (pin * 2ul));
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	689b      	ldr	r3, [r3, #8]
 8000ada:	f003 0203 	and.w	r2, r3, #3
 8000ade:	69fb      	ldr	r3, [r7, #28]
 8000ae0:	005b      	lsls	r3, r3, #1
 8000ae2:	fa02 f303 	lsl.w	r3, r2, r3
 8000ae6:	69ba      	ldr	r2, [r7, #24]
 8000ae8:	4313      	orrs	r3, r2
 8000aea:	61bb      	str	r3, [r7, #24]
            ConfigPtr->Port->MODER = tmp_reg;
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	681b      	ldr	r3, [r3, #0]
 8000af0:	69ba      	ldr	r2, [r7, #24]
 8000af2:	601a      	str	r2, [r3, #0]

            /* Interrupt and Event Config */
            if ((ConfigPtr->Mode & EXTI_MODE) != 0u)
 8000af4:	687b      	ldr	r3, [r7, #4]
 8000af6:	689b      	ldr	r3, [r3, #8]
 8000af8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8000afc:	2b00      	cmp	r3, #0
 8000afe:	f000 80f1 	beq.w	8000ce4 <Port_Init+0x64c>
            {
                /* Enable SYSCFG Clock for Interrupts */
                __RCC_SYSCFG_CLK_ENABLE();
 8000b02:	2300      	movs	r3, #0
 8000b04:	60fb      	str	r3, [r7, #12]
 8000b06:	4b2c      	ldr	r3, [pc, #176]	@ (8000bb8 <Port_Init+0x520>)
 8000b08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000b0a:	4a2b      	ldr	r2, [pc, #172]	@ (8000bb8 <Port_Init+0x520>)
 8000b0c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000b10:	6453      	str	r3, [r2, #68]	@ 0x44
 8000b12:	4b29      	ldr	r3, [pc, #164]	@ (8000bb8 <Port_Init+0x520>)
 8000b14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000b16:	0b9b      	lsrs	r3, r3, #14
 8000b18:	f003 0301 	and.w	r3, r3, #1
 8000b1c:	60fb      	str	r3, [r7, #12]
 8000b1e:	68fb      	ldr	r3, [r7, #12]

                /* Select the Port and Pin from which interrupt should occur */
                tmp_reg = SYSCFG->EXTICR[pin >> 2U];
 8000b20:	4a26      	ldr	r2, [pc, #152]	@ (8000bbc <Port_Init+0x524>)
 8000b22:	69fb      	ldr	r3, [r7, #28]
 8000b24:	089b      	lsrs	r3, r3, #2
 8000b26:	3302      	adds	r3, #2
 8000b28:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000b2c:	61bb      	str	r3, [r7, #24]
                tmp_reg &= ~(0x0FU << (4U * (pin & 0x03U)));
 8000b2e:	69fb      	ldr	r3, [r7, #28]
 8000b30:	f003 0303 	and.w	r3, r3, #3
 8000b34:	009b      	lsls	r3, r3, #2
 8000b36:	220f      	movs	r2, #15
 8000b38:	fa02 f303 	lsl.w	r3, r2, r3
 8000b3c:	43db      	mvns	r3, r3
 8000b3e:	69ba      	ldr	r2, [r7, #24]
 8000b40:	4013      	ands	r3, r2
 8000b42:	61bb      	str	r3, [r7, #24]
                tmp_reg |= ((uint32_t)(PORT_GET_INDEX(ConfigPtr->Port)) << (4U * (pin & 0x03U)));
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	681b      	ldr	r3, [r3, #0]
 8000b48:	4a1d      	ldr	r2, [pc, #116]	@ (8000bc0 <Port_Init+0x528>)
 8000b4a:	4293      	cmp	r3, r2
 8000b4c:	d046      	beq.n	8000bdc <Port_Init+0x544>
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	681b      	ldr	r3, [r3, #0]
 8000b52:	4a1c      	ldr	r2, [pc, #112]	@ (8000bc4 <Port_Init+0x52c>)
 8000b54:	4293      	cmp	r3, r2
 8000b56:	d024      	beq.n	8000ba2 <Port_Init+0x50a>
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	4a1a      	ldr	r2, [pc, #104]	@ (8000bc8 <Port_Init+0x530>)
 8000b5e:	4293      	cmp	r3, r2
 8000b60:	d01d      	beq.n	8000b9e <Port_Init+0x506>
 8000b62:	687b      	ldr	r3, [r7, #4]
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	4a19      	ldr	r2, [pc, #100]	@ (8000bcc <Port_Init+0x534>)
 8000b68:	4293      	cmp	r3, r2
 8000b6a:	d016      	beq.n	8000b9a <Port_Init+0x502>
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	4a17      	ldr	r2, [pc, #92]	@ (8000bd0 <Port_Init+0x538>)
 8000b72:	4293      	cmp	r3, r2
 8000b74:	d00f      	beq.n	8000b96 <Port_Init+0x4fe>
 8000b76:	687b      	ldr	r3, [r7, #4]
 8000b78:	681b      	ldr	r3, [r3, #0]
 8000b7a:	4a16      	ldr	r2, [pc, #88]	@ (8000bd4 <Port_Init+0x53c>)
 8000b7c:	4293      	cmp	r3, r2
 8000b7e:	d008      	beq.n	8000b92 <Port_Init+0x4fa>
 8000b80:	687b      	ldr	r3, [r7, #4]
 8000b82:	681b      	ldr	r3, [r3, #0]
 8000b84:	4a14      	ldr	r2, [pc, #80]	@ (8000bd8 <Port_Init+0x540>)
 8000b86:	4293      	cmp	r3, r2
 8000b88:	d101      	bne.n	8000b8e <Port_Init+0x4f6>
 8000b8a:	2306      	movs	r3, #6
 8000b8c:	e027      	b.n	8000bde <Port_Init+0x546>
 8000b8e:	2307      	movs	r3, #7
 8000b90:	e025      	b.n	8000bde <Port_Init+0x546>
 8000b92:	2305      	movs	r3, #5
 8000b94:	e023      	b.n	8000bde <Port_Init+0x546>
 8000b96:	2304      	movs	r3, #4
 8000b98:	e021      	b.n	8000bde <Port_Init+0x546>
 8000b9a:	2303      	movs	r3, #3
 8000b9c:	e01f      	b.n	8000bde <Port_Init+0x546>
 8000b9e:	2302      	movs	r3, #2
 8000ba0:	e01d      	b.n	8000bde <Port_Init+0x546>
 8000ba2:	2301      	movs	r3, #1
 8000ba4:	e01b      	b.n	8000bde <Port_Init+0x546>
 8000ba6:	bf00      	nop
 8000ba8:	200000e6 	.word	0x200000e6
 8000bac:	2000004c 	.word	0x2000004c
 8000bb0:	200000b4 	.word	0x200000b4
 8000bb4:	20000080 	.word	0x20000080
 8000bb8:	40023800 	.word	0x40023800
 8000bbc:	40013800 	.word	0x40013800
 8000bc0:	40020000 	.word	0x40020000
 8000bc4:	40020400 	.word	0x40020400
 8000bc8:	40020800 	.word	0x40020800
 8000bcc:	40020c00 	.word	0x40020c00
 8000bd0:	40021000 	.word	0x40021000
 8000bd4:	40021400 	.word	0x40021400
 8000bd8:	40021800 	.word	0x40021800
 8000bdc:	2300      	movs	r3, #0
 8000bde:	69fa      	ldr	r2, [r7, #28]
 8000be0:	f002 0203 	and.w	r2, r2, #3
 8000be4:	0092      	lsls	r2, r2, #2
 8000be6:	4093      	lsls	r3, r2
 8000be8:	69ba      	ldr	r2, [r7, #24]
 8000bea:	4313      	orrs	r3, r2
 8000bec:	61bb      	str	r3, [r7, #24]
                SYSCFG->EXTICR[pin >> 2U] = tmp_reg;
 8000bee:	4946      	ldr	r1, [pc, #280]	@ (8000d08 <Port_Init+0x670>)
 8000bf0:	69fb      	ldr	r3, [r7, #28]
 8000bf2:	089b      	lsrs	r3, r3, #2
 8000bf4:	3302      	adds	r3, #2
 8000bf6:	69ba      	ldr	r2, [r7, #24]
 8000bf8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

                /* Configure Rising edge */
                tmp_reg = EXTI->RTSR;
 8000bfc:	4b43      	ldr	r3, [pc, #268]	@ (8000d0c <Port_Init+0x674>)
 8000bfe:	689b      	ldr	r3, [r3, #8]
 8000c00:	61bb      	str	r3, [r7, #24]
                tmp_reg &= ~(1 << pin);
 8000c02:	2201      	movs	r2, #1
 8000c04:	69fb      	ldr	r3, [r7, #28]
 8000c06:	fa02 f303 	lsl.w	r3, r2, r3
 8000c0a:	43db      	mvns	r3, r3
 8000c0c:	461a      	mov	r2, r3
 8000c0e:	69bb      	ldr	r3, [r7, #24]
 8000c10:	4013      	ands	r3, r2
 8000c12:	61bb      	str	r3, [r7, #24]
                if ((ConfigPtr->Mode & TRIGGER_RISING) != 0)
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	689b      	ldr	r3, [r3, #8]
 8000c18:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8000c1c:	2b00      	cmp	r3, #0
 8000c1e:	d007      	beq.n	8000c30 <Port_Init+0x598>
                    tmp_reg |= (1 << pin);
 8000c20:	2201      	movs	r2, #1
 8000c22:	69fb      	ldr	r3, [r7, #28]
 8000c24:	fa02 f303 	lsl.w	r3, r2, r3
 8000c28:	461a      	mov	r2, r3
 8000c2a:	69bb      	ldr	r3, [r7, #24]
 8000c2c:	4313      	orrs	r3, r2
 8000c2e:	61bb      	str	r3, [r7, #24]
                EXTI->RTSR = tmp_reg;
 8000c30:	4a36      	ldr	r2, [pc, #216]	@ (8000d0c <Port_Init+0x674>)
 8000c32:	69bb      	ldr	r3, [r7, #24]
 8000c34:	6093      	str	r3, [r2, #8]

                /* Configure Falling edge */
                tmp_reg = EXTI->FTSR;
 8000c36:	4b35      	ldr	r3, [pc, #212]	@ (8000d0c <Port_Init+0x674>)
 8000c38:	68db      	ldr	r3, [r3, #12]
 8000c3a:	61bb      	str	r3, [r7, #24]
                tmp_reg &= ~(1 << pin);
 8000c3c:	2201      	movs	r2, #1
 8000c3e:	69fb      	ldr	r3, [r7, #28]
 8000c40:	fa02 f303 	lsl.w	r3, r2, r3
 8000c44:	43db      	mvns	r3, r3
 8000c46:	461a      	mov	r2, r3
 8000c48:	69bb      	ldr	r3, [r7, #24]
 8000c4a:	4013      	ands	r3, r2
 8000c4c:	61bb      	str	r3, [r7, #24]
                if ((ConfigPtr->Mode & TRIGGER_FALLING) != 0)
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	689b      	ldr	r3, [r3, #8]
 8000c52:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d007      	beq.n	8000c6a <Port_Init+0x5d2>
                    tmp_reg |= (1 << pin);
 8000c5a:	2201      	movs	r2, #1
 8000c5c:	69fb      	ldr	r3, [r7, #28]
 8000c5e:	fa02 f303 	lsl.w	r3, r2, r3
 8000c62:	461a      	mov	r2, r3
 8000c64:	69bb      	ldr	r3, [r7, #24]
 8000c66:	4313      	orrs	r3, r2
 8000c68:	61bb      	str	r3, [r7, #24]
                EXTI->FTSR = tmp_reg;
 8000c6a:	4a28      	ldr	r2, [pc, #160]	@ (8000d0c <Port_Init+0x674>)
 8000c6c:	69bb      	ldr	r3, [r7, #24]
 8000c6e:	60d3      	str	r3, [r2, #12]

                /* Configure Event */
                tmp_reg = EXTI->EMR;
 8000c70:	4b26      	ldr	r3, [pc, #152]	@ (8000d0c <Port_Init+0x674>)
 8000c72:	685b      	ldr	r3, [r3, #4]
 8000c74:	61bb      	str	r3, [r7, #24]
                tmp_reg &= ~(1 << pin);
 8000c76:	2201      	movs	r2, #1
 8000c78:	69fb      	ldr	r3, [r7, #28]
 8000c7a:	fa02 f303 	lsl.w	r3, r2, r3
 8000c7e:	43db      	mvns	r3, r3
 8000c80:	461a      	mov	r2, r3
 8000c82:	69bb      	ldr	r3, [r7, #24]
 8000c84:	4013      	ands	r3, r2
 8000c86:	61bb      	str	r3, [r7, #24]
                if ((ConfigPtr->Mode & EXTI_EVT) != 0)
 8000c88:	687b      	ldr	r3, [r7, #4]
 8000c8a:	689b      	ldr	r3, [r3, #8]
 8000c8c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000c90:	2b00      	cmp	r3, #0
 8000c92:	d007      	beq.n	8000ca4 <Port_Init+0x60c>
                    tmp_reg |= (1 << pin);
 8000c94:	2201      	movs	r2, #1
 8000c96:	69fb      	ldr	r3, [r7, #28]
 8000c98:	fa02 f303 	lsl.w	r3, r2, r3
 8000c9c:	461a      	mov	r2, r3
 8000c9e:	69bb      	ldr	r3, [r7, #24]
 8000ca0:	4313      	orrs	r3, r2
 8000ca2:	61bb      	str	r3, [r7, #24]
                EXTI->EMR = tmp_reg;
 8000ca4:	4a19      	ldr	r2, [pc, #100]	@ (8000d0c <Port_Init+0x674>)
 8000ca6:	69bb      	ldr	r3, [r7, #24]
 8000ca8:	6053      	str	r3, [r2, #4]

                /* Configure Interrupt */
                tmp_reg = EXTI->IMR;
 8000caa:	4b18      	ldr	r3, [pc, #96]	@ (8000d0c <Port_Init+0x674>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	61bb      	str	r3, [r7, #24]
                tmp_reg &= ~(1 << pin);
 8000cb0:	2201      	movs	r2, #1
 8000cb2:	69fb      	ldr	r3, [r7, #28]
 8000cb4:	fa02 f303 	lsl.w	r3, r2, r3
 8000cb8:	43db      	mvns	r3, r3
 8000cba:	461a      	mov	r2, r3
 8000cbc:	69bb      	ldr	r3, [r7, #24]
 8000cbe:	4013      	ands	r3, r2
 8000cc0:	61bb      	str	r3, [r7, #24]
                if ((ConfigPtr->Mode & EXTI_IT) != 0)
 8000cc2:	687b      	ldr	r3, [r7, #4]
 8000cc4:	689b      	ldr	r3, [r3, #8]
 8000cc6:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000cca:	2b00      	cmp	r3, #0
 8000ccc:	d007      	beq.n	8000cde <Port_Init+0x646>
                    tmp_reg |= (1 << pin);
 8000cce:	2201      	movs	r2, #1
 8000cd0:	69fb      	ldr	r3, [r7, #28]
 8000cd2:	fa02 f303 	lsl.w	r3, r2, r3
 8000cd6:	461a      	mov	r2, r3
 8000cd8:	69bb      	ldr	r3, [r7, #24]
 8000cda:	4313      	orrs	r3, r2
 8000cdc:	61bb      	str	r3, [r7, #24]
                EXTI->IMR = tmp_reg;
 8000cde:	4a0b      	ldr	r2, [pc, #44]	@ (8000d0c <Port_Init+0x674>)
 8000ce0:	69bb      	ldr	r3, [r7, #24]
 8000ce2:	6013      	str	r3, [r2, #0]
    for (pin = 0; pin < PORT_LENGTH; pin++)
 8000ce4:	69fb      	ldr	r3, [r7, #28]
 8000ce6:	3301      	adds	r3, #1
 8000ce8:	61fb      	str	r3, [r7, #28]
 8000cea:	69fb      	ldr	r3, [r7, #28]
 8000cec:	2b0f      	cmp	r3, #15
 8000cee:	f67f ad9f 	bls.w	8000830 <Port_Init+0x198>
            }
        }
    }
    if (err)
 8000cf2:	7dfb      	ldrb	r3, [r7, #23]
 8000cf4:	2b00      	cmp	r3, #0
 8000cf6:	d001      	beq.n	8000cfc <Port_Init+0x664>
        return E_NOK;
 8000cf8:	2301      	movs	r3, #1
 8000cfa:	e000      	b.n	8000cfe <Port_Init+0x666>
    return E_OK;
 8000cfc:	2300      	movs	r3, #0
}
 8000cfe:	4618      	mov	r0, r3
 8000d00:	3720      	adds	r7, #32
 8000d02:	46bd      	mov	sp, r7
 8000d04:	bd80      	pop	{r7, pc}
 8000d06:	bf00      	nop
 8000d08:	40013800 	.word	0x40013800
 8000d0c:	40013c00 	.word	0x40013c00

08000d10 <Port_TogglePin>:
    }
    return E_OK;
}

uint8_t Port_TogglePin(PORT_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8000d10:	b480      	push	{r7}
 8000d12:	b085      	sub	sp, #20
 8000d14:	af00      	add	r7, sp, #0
 8000d16:	6078      	str	r0, [r7, #4]
 8000d18:	460b      	mov	r3, r1
 8000d1a:	807b      	strh	r3, [r7, #2]
    uint32_t odr;

    /* Check the parameters */
    uint8_t err = 0;
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	73fb      	strb	r3, [r7, #15]
    /* Check the parameters */
    if (!(IS_PORT_PIN(GPIO_Pin)))
 8000d20:	887b      	ldrh	r3, [r7, #2]
 8000d22:	2b00      	cmp	r3, #0
 8000d24:	d119      	bne.n	8000d5a <Port_TogglePin+0x4a>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PIN;
 8000d26:	4b37      	ldr	r3, [pc, #220]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d28:	781b      	ldrb	r3, [r3, #0]
 8000d2a:	461a      	mov	r2, r3
 8000d2c:	4b36      	ldr	r3, [pc, #216]	@ (8000e08 <Port_TogglePin+0xf8>)
 8000d2e:	2102      	movs	r1, #2
 8000d30:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 8000d32:	4b34      	ldr	r3, [pc, #208]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d34:	781b      	ldrb	r3, [r3, #0]
 8000d36:	461a      	mov	r2, r3
 8000d38:	4b34      	ldr	r3, [pc, #208]	@ (8000e0c <Port_TogglePin+0xfc>)
 8000d3a:	217c      	movs	r1, #124	@ 0x7c
 8000d3c:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_TOGGLEPIN;
 8000d3e:	4b31      	ldr	r3, [pc, #196]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d40:	781b      	ldrb	r3, [r3, #0]
 8000d42:	461a      	mov	r2, r3
 8000d44:	4b32      	ldr	r3, [pc, #200]	@ (8000e10 <Port_TogglePin+0x100>)
 8000d46:	2105      	movs	r1, #5
 8000d48:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 8000d4a:	4b2e      	ldr	r3, [pc, #184]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d4c:	781b      	ldrb	r3, [r3, #0]
 8000d4e:	3301      	adds	r3, #1
 8000d50:	b2da      	uxtb	r2, r3
 8000d52:	4b2c      	ldr	r3, [pc, #176]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d54:	701a      	strb	r2, [r3, #0]
        err = 1;
 8000d56:	2301      	movs	r3, #1
 8000d58:	73fb      	strb	r3, [r7, #15]
    }

    if (!(IS_GPIO_ALL_INSTANCE(GPIOx)))
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	4a2d      	ldr	r2, [pc, #180]	@ (8000e14 <Port_TogglePin+0x104>)
 8000d5e:	4293      	cmp	r3, r2
 8000d60:	d035      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d62:	687b      	ldr	r3, [r7, #4]
 8000d64:	4a2c      	ldr	r2, [pc, #176]	@ (8000e18 <Port_TogglePin+0x108>)
 8000d66:	4293      	cmp	r3, r2
 8000d68:	d031      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d6a:	687b      	ldr	r3, [r7, #4]
 8000d6c:	4a2b      	ldr	r2, [pc, #172]	@ (8000e1c <Port_TogglePin+0x10c>)
 8000d6e:	4293      	cmp	r3, r2
 8000d70:	d02d      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d72:	687b      	ldr	r3, [r7, #4]
 8000d74:	4a2a      	ldr	r2, [pc, #168]	@ (8000e20 <Port_TogglePin+0x110>)
 8000d76:	4293      	cmp	r3, r2
 8000d78:	d029      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d7a:	687b      	ldr	r3, [r7, #4]
 8000d7c:	4a29      	ldr	r2, [pc, #164]	@ (8000e24 <Port_TogglePin+0x114>)
 8000d7e:	4293      	cmp	r3, r2
 8000d80:	d025      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	4a28      	ldr	r2, [pc, #160]	@ (8000e28 <Port_TogglePin+0x118>)
 8000d86:	4293      	cmp	r3, r2
 8000d88:	d021      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	4a27      	ldr	r2, [pc, #156]	@ (8000e2c <Port_TogglePin+0x11c>)
 8000d8e:	4293      	cmp	r3, r2
 8000d90:	d01d      	beq.n	8000dce <Port_TogglePin+0xbe>
 8000d92:	687b      	ldr	r3, [r7, #4]
 8000d94:	4a26      	ldr	r2, [pc, #152]	@ (8000e30 <Port_TogglePin+0x120>)
 8000d96:	4293      	cmp	r3, r2
 8000d98:	d019      	beq.n	8000dce <Port_TogglePin+0xbe>
    {
        DET_ErrorCode[Error_Code_Index] = PORT_E_INVALID_PORT;
 8000d9a:	4b1a      	ldr	r3, [pc, #104]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000d9c:	781b      	ldrb	r3, [r3, #0]
 8000d9e:	461a      	mov	r2, r3
 8000da0:	4b19      	ldr	r3, [pc, #100]	@ (8000e08 <Port_TogglePin+0xf8>)
 8000da2:	2101      	movs	r1, #1
 8000da4:	5499      	strb	r1, [r3, r2]
        DET_ModuleId[Error_Code_Index] = PORT_MODULE_ID;
 8000da6:	4b17      	ldr	r3, [pc, #92]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000da8:	781b      	ldrb	r3, [r3, #0]
 8000daa:	461a      	mov	r2, r3
 8000dac:	4b17      	ldr	r3, [pc, #92]	@ (8000e0c <Port_TogglePin+0xfc>)
 8000dae:	217c      	movs	r1, #124	@ 0x7c
 8000db0:	5499      	strb	r1, [r3, r2]
        DET_ServiceId[Error_Code_Index] = PORT_SID_TOGGLEPIN;
 8000db2:	4b14      	ldr	r3, [pc, #80]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000db4:	781b      	ldrb	r3, [r3, #0]
 8000db6:	461a      	mov	r2, r3
 8000db8:	4b15      	ldr	r3, [pc, #84]	@ (8000e10 <Port_TogglePin+0x100>)
 8000dba:	2105      	movs	r1, #5
 8000dbc:	5499      	strb	r1, [r3, r2]
        Error_Code_Index++;
 8000dbe:	4b11      	ldr	r3, [pc, #68]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000dc0:	781b      	ldrb	r3, [r3, #0]
 8000dc2:	3301      	adds	r3, #1
 8000dc4:	b2da      	uxtb	r2, r3
 8000dc6:	4b0f      	ldr	r3, [pc, #60]	@ (8000e04 <Port_TogglePin+0xf4>)
 8000dc8:	701a      	strb	r2, [r3, #0]
        err = 2;
 8000dca:	2302      	movs	r3, #2
 8000dcc:	73fb      	strb	r3, [r7, #15]
    }

    if (err)
 8000dce:	7bfb      	ldrb	r3, [r7, #15]
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d001      	beq.n	8000dd8 <Port_TogglePin+0xc8>
        return E_NOK;
 8000dd4:	2301      	movs	r3, #1
 8000dd6:	e00e      	b.n	8000df6 <Port_TogglePin+0xe6>

    /* get current Output Data Register value */
    odr = GPIOx->ODR;
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	695b      	ldr	r3, [r3, #20]
 8000ddc:	60bb      	str	r3, [r7, #8]

    /* Set selected pins that were at low level, and reset ones that were high */
    GPIOx->BSRR = ((odr & GPIO_Pin) << 16u) | (~odr & GPIO_Pin);
 8000dde:	887a      	ldrh	r2, [r7, #2]
 8000de0:	68bb      	ldr	r3, [r7, #8]
 8000de2:	4013      	ands	r3, r2
 8000de4:	041a      	lsls	r2, r3, #16
 8000de6:	68bb      	ldr	r3, [r7, #8]
 8000de8:	43d9      	mvns	r1, r3
 8000dea:	887b      	ldrh	r3, [r7, #2]
 8000dec:	400b      	ands	r3, r1
 8000dee:	431a      	orrs	r2, r3
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	619a      	str	r2, [r3, #24]

    return E_OK;
 8000df4:	2300      	movs	r3, #0
}
 8000df6:	4618      	mov	r0, r3
 8000df8:	3714      	adds	r7, #20
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e00:	4770      	bx	lr
 8000e02:	bf00      	nop
 8000e04:	200000e6 	.word	0x200000e6
 8000e08:	2000004c 	.word	0x2000004c
 8000e0c:	200000b4 	.word	0x200000b4
 8000e10:	20000080 	.word	0x20000080
 8000e14:	40020000 	.word	0x40020000
 8000e18:	40020400 	.word	0x40020400
 8000e1c:	40020800 	.word	0x40020800
 8000e20:	40020c00 	.word	0x40020c00
 8000e24:	40021000 	.word	0x40021000
 8000e28:	40021400 	.word	0x40021400
 8000e2c:	40021800 	.word	0x40021800
 8000e30:	40021c00 	.word	0x40021c00

08000e34 <Port_EXTI0_IRQHandler>:

void Port_EXTI0_IRQHandler(Port_PinType Port_Pin)
{
 8000e34:	b580      	push	{r7, lr}
 8000e36:	b082      	sub	sp, #8
 8000e38:	af00      	add	r7, sp, #0
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	80fb      	strh	r3, [r7, #6]
    /* Check if the interrupt has Occured */
    if(EXTI->PR & Port_Pin)
 8000e3e:	4b09      	ldr	r3, [pc, #36]	@ (8000e64 <Port_EXTI0_IRQHandler+0x30>)
 8000e40:	695a      	ldr	r2, [r3, #20]
 8000e42:	88fb      	ldrh	r3, [r7, #6]
 8000e44:	4013      	ands	r3, r2
 8000e46:	2b00      	cmp	r3, #0
 8000e48:	d005      	beq.n	8000e56 <Port_EXTI0_IRQHandler+0x22>
    {
        /* Clear  the PR */
        EXTI->PR |= Port_Pin;
 8000e4a:	4b06      	ldr	r3, [pc, #24]	@ (8000e64 <Port_EXTI0_IRQHandler+0x30>)
 8000e4c:	695a      	ldr	r2, [r3, #20]
 8000e4e:	88fb      	ldrh	r3, [r7, #6]
 8000e50:	4904      	ldr	r1, [pc, #16]	@ (8000e64 <Port_EXTI0_IRQHandler+0x30>)
 8000e52:	4313      	orrs	r3, r2
 8000e54:	614b      	str	r3, [r1, #20]
    }

    Port_EXTI0_IRQ_CB();
 8000e56:	f000 f821 	bl	8000e9c <Port_EXTI0_IRQ_CB>
}
 8000e5a:	bf00      	nop
 8000e5c:	3708      	adds	r7, #8
 8000e5e:	46bd      	mov	sp, r7
 8000e60:	bd80      	pop	{r7, pc}
 8000e62:	bf00      	nop
 8000e64:	40013c00 	.word	0x40013c00

08000e68 <Port_EXTI15_10_IRQHandler>:

void Port_EXTI15_10_IRQHandler(Port_PinType Port_Pin)
{
 8000e68:	b580      	push	{r7, lr}
 8000e6a:	b082      	sub	sp, #8
 8000e6c:	af00      	add	r7, sp, #0
 8000e6e:	4603      	mov	r3, r0
 8000e70:	80fb      	strh	r3, [r7, #6]
    /* Check if the interrupt has Occured */
    if(EXTI->PR & Port_Pin)
 8000e72:	4b09      	ldr	r3, [pc, #36]	@ (8000e98 <Port_EXTI15_10_IRQHandler+0x30>)
 8000e74:	695a      	ldr	r2, [r3, #20]
 8000e76:	88fb      	ldrh	r3, [r7, #6]
 8000e78:	4013      	ands	r3, r2
 8000e7a:	2b00      	cmp	r3, #0
 8000e7c:	d005      	beq.n	8000e8a <Port_EXTI15_10_IRQHandler+0x22>
    {
        /* Clear  the PR */
        EXTI->PR |= Port_Pin;
 8000e7e:	4b06      	ldr	r3, [pc, #24]	@ (8000e98 <Port_EXTI15_10_IRQHandler+0x30>)
 8000e80:	695a      	ldr	r2, [r3, #20]
 8000e82:	88fb      	ldrh	r3, [r7, #6]
 8000e84:	4904      	ldr	r1, [pc, #16]	@ (8000e98 <Port_EXTI15_10_IRQHandler+0x30>)
 8000e86:	4313      	orrs	r3, r2
 8000e88:	614b      	str	r3, [r1, #20]
    }

    Port_EXTI15_10_IRQ_CB();
 8000e8a:	f7ff fa51 	bl	8000330 <Port_EXTI15_10_IRQ_CB>
}
 8000e8e:	bf00      	nop
 8000e90:	3708      	adds	r7, #8
 8000e92:	46bd      	mov	sp, r7
 8000e94:	bd80      	pop	{r7, pc}
 8000e96:	bf00      	nop
 8000e98:	40013c00 	.word	0x40013c00

08000e9c <Port_EXTI0_IRQ_CB>:

__attribute__((weak)) void Port_EXTI0_IRQ_CB(void)
{
 8000e9c:	b480      	push	{r7}
 8000e9e:	af00      	add	r7, sp, #0
    ;
}
 8000ea0:	bf00      	nop
 8000ea2:	46bd      	mov	sp, r7
 8000ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ea8:	4770      	bx	lr
	...

08000eac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000eac:	480d      	ldr	r0, [pc, #52]	@ (8000ee4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000eae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000eb0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000eb4:	480c      	ldr	r0, [pc, #48]	@ (8000ee8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000eb6:	490d      	ldr	r1, [pc, #52]	@ (8000eec <LoopForever+0xa>)
  ldr r2, =_sidata
 8000eb8:	4a0d      	ldr	r2, [pc, #52]	@ (8000ef0 <LoopForever+0xe>)
  movs r3, #0
 8000eba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000ebc:	e002      	b.n	8000ec4 <LoopCopyDataInit>

08000ebe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000ebe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000ec0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000ec2:	3304      	adds	r3, #4

08000ec4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000ec4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000ec6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000ec8:	d3f9      	bcc.n	8000ebe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000eca:	4a0a      	ldr	r2, [pc, #40]	@ (8000ef4 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000ecc:	4c0a      	ldr	r4, [pc, #40]	@ (8000ef8 <LoopForever+0x16>)
  movs r3, #0
 8000ece:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000ed0:	e001      	b.n	8000ed6 <LoopFillZerobss>

08000ed2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000ed2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000ed4:	3204      	adds	r2, #4

08000ed6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000ed6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000ed8:	d3fb      	bcc.n	8000ed2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000eda:	f000 f811 	bl	8000f00 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000ede:	f7ff f9ee 	bl	80002be <main>

08000ee2 <LoopForever>:

LoopForever:
  b LoopForever
 8000ee2:	e7fe      	b.n	8000ee2 <LoopForever>
  ldr   r0, =_estack
 8000ee4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000ee8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000eec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000ef0:	08000f68 	.word	0x08000f68
  ldr r2, =_sbss
 8000ef4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000ef8:	200000e8 	.word	0x200000e8

08000efc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000efc:	e7fe      	b.n	8000efc <ADC_IRQHandler>
	...

08000f00 <__libc_init_array>:
 8000f00:	b570      	push	{r4, r5, r6, lr}
 8000f02:	4d0d      	ldr	r5, [pc, #52]	@ (8000f38 <__libc_init_array+0x38>)
 8000f04:	4c0d      	ldr	r4, [pc, #52]	@ (8000f3c <__libc_init_array+0x3c>)
 8000f06:	1b64      	subs	r4, r4, r5
 8000f08:	10a4      	asrs	r4, r4, #2
 8000f0a:	2600      	movs	r6, #0
 8000f0c:	42a6      	cmp	r6, r4
 8000f0e:	d109      	bne.n	8000f24 <__libc_init_array+0x24>
 8000f10:	4d0b      	ldr	r5, [pc, #44]	@ (8000f40 <__libc_init_array+0x40>)
 8000f12:	4c0c      	ldr	r4, [pc, #48]	@ (8000f44 <__libc_init_array+0x44>)
 8000f14:	f000 f818 	bl	8000f48 <_init>
 8000f18:	1b64      	subs	r4, r4, r5
 8000f1a:	10a4      	asrs	r4, r4, #2
 8000f1c:	2600      	movs	r6, #0
 8000f1e:	42a6      	cmp	r6, r4
 8000f20:	d105      	bne.n	8000f2e <__libc_init_array+0x2e>
 8000f22:	bd70      	pop	{r4, r5, r6, pc}
 8000f24:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f28:	4798      	blx	r3
 8000f2a:	3601      	adds	r6, #1
 8000f2c:	e7ee      	b.n	8000f0c <__libc_init_array+0xc>
 8000f2e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f32:	4798      	blx	r3
 8000f34:	3601      	adds	r6, #1
 8000f36:	e7f2      	b.n	8000f1e <__libc_init_array+0x1e>
 8000f38:	08000f60 	.word	0x08000f60
 8000f3c:	08000f60 	.word	0x08000f60
 8000f40:	08000f60 	.word	0x08000f60
 8000f44:	08000f64 	.word	0x08000f64

08000f48 <_init>:
 8000f48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f4a:	bf00      	nop
 8000f4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f4e:	bc08      	pop	{r3}
 8000f50:	469e      	mov	lr, r3
 8000f52:	4770      	bx	lr

08000f54 <_fini>:
 8000f54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f56:	bf00      	nop
 8000f58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f5a:	bc08      	pop	{r3}
 8000f5c:	469e      	mov	lr, r3
 8000f5e:	4770      	bx	lr
